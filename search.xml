<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Ubuntu에서 adb no permissions 또는 ????? no permissions 뜨는 현상]]></title>
    <url>%2Fposts%2F2019%2F08%2F11%2FAndroid-51-android.rules-no-permissions%2F</url>
    <content type="text"><![CDATA[기존 ADB No Permissions 이슈를 다룬 포스트가 있어, 이 포스트로 통합 작성 및 수정을 완료했습니다. 시작현재 여러 안드로이드 디바이스들을 활용하여, 앱 테스팅을 작업하고 있습니다. 진행 환경은 Ubuntu 18.04에서 Android Studio 로 작업하고 있습니다. 그런데 아무래도 adb CLI를 다루는 것에 좀 친숙해야하니까,억지로라도 CLI 입력하여 작업하고 있는데.. 12List of devices attached???????????? no permissions 화면에 떠 있는 저 두 줄이 저에게 찾아온 것이죠. 해결해봅시다USB DebuggingOptions &gt; About Phone &gt; Build number (또는 설정 &gt; 단말기 정보 &gt; 빌드 넘버 )를 3번 눌러서Developer Options (개발자 옵션)을 활성화 시킵니다.그리고 USB Debugging (USB 디버깅) 옵션을 체크합니다. 아마 대부분 이 건 체크를 하셨을테고… USB 연결 모드 설정이 부분은 많이들 까먹는 경우가 많습니다! 일부 기기들은 USB 디버깅할 때마다 매번 설정해줘야 하기 때문입니다.대부분 USB Debugging 옵션을 설정하는 거에 마치는 분들이 많은데..간혹 USB 연결시 ‘Charging(충전)’ 모드로 활성화하시는 분들이 계십니다.adb 연결시 MTP (File Transfer) 프로토콜 연결을 활성화시킬 필요가 있습니다.(PTP; Picture Transfer Protocol 도 지원하는 경우가 있으나, 보통은 MTP 옵션으로 맞추는 것이 일반적입니다.) 설정 (Settings) 이동 저장소 및 USB (Storage) 이동, 또는 개발자 옵션 (Developer Options) 이동 USB 설정 선택 (USB Computer Connection) 화면 선택 PTP (Picture Transfer Protocol) 라디오 버튼 선택 51-android.rulesUbuntu(또는 Fedora 등) Linux 환경에서 개발하기 위해선, 각 기기의 USB Configuration 항목이 설정된 udev 파일을 추가해줘야합니다. 그리고 이 udev 파일에는 반드시 고유 제조사의 ID 번호가 반드시 기록되어 있어야 합니다. 이렇게 Android Debugging 용도로 추가해야 하는 파일의 이름은 51-android.rules 입니다.이 파일의 경로는 /etc/udev/rules.d에 위치하여야 합니다. /etc/udev/rules.d/51-android.rules 파일 존재 유무 확인이 파일이 존재한지 확인합니다. 존재하다면 아래 과정을 진행해주세요 이 파일을 기록하는 포맷은 다음과 같습니다. 1SUBSYSTEM==&quot;usb&quot;, ATTR&#123;idVendor&#125;==&quot;2a48&quot;, MODE=&quot;0600&quot;, OWNER=&quot;wgtech.dev&quot; 여기서 가장 중요한 부분은 ATTR{idVendor} 입니다. Windows는 각 제조사의 USB Driver를 이용하여 각각 설치해야하고,Mac은 크게 설치해야하는 부분이 없다는 것과는 다르게, Linux 환경에서는 각각의 고유 제조사 번호를 알아야합니다. 아무튼 설명으로 돌아오자면 SUBSYSTEM 이는 USB로 연결할 것이라고 선언하는 문구입니다. ATTR{idVendor} 여기를 참고하여 adb 연결할 기기의 제조사 ID를 입력해야합니다. MODE 권한을 설정합니다. (여기서 600 = u+rw = 사용자에게 읽기(r;read)와 쓰기(w;write) 권한을 부여합니다.) OWNER 시스템 프레임워크 개발시 Build 작성자의 이름을 정할 수 있습니다. 여러 기기를 사용할 경우, 모든 줄(설정)의 OWNER 부분은 반드시 동일해야합니다. (그래야 헷갈리지 않으니까요!) 여기서 질문!Q. 제조사 번호 (idVendor) 값을 모르겠어요.. A. lsusb 명령어를 이용하면 됩니다. USB 연결 전 lsusb 1234567891011$ lsusbBus 006 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 005 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubBus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 001 Device 020: ID 046d:c31d Logitech, Inc. Media Keyboard K200Bus 001 Device 022: ID 2516:0051 Bus 001 Device 021: ID 046d:c077 Logitech, Inc. M105 Optical MouseBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub USB 연결 후 lsusb 12345678910Bus 006 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 005 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubBus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 001 Device 020: ID 046d:c31d Logitech, Inc. Media Keyboard K200Bus 001 Device 028: ID 2a48:5103Bus 001 Device 022: ID 2516:0051 Bus 001 Device 021: ID 046d:c077 Logitech, Inc. M105 Optical MouseBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub 차이를 확인하셨나요? 이 마치 수수께끼 같은 느낌.. 정답은.. Bus 001 Device 028: ID 2a48:5103 여기서 2a48이 제조사 번호입니다. (여기서 2a48은 ‘일반 USB 기기’를 의미하는 제조사 번호입니다.) 제조사 번호와 기기ID를 파악했으니 51-android.rules 파일을 생성하여 다음과 같이 작성하면 됩니다. /etc/udev/rules.d/51-android.rules 1SUBSYSTEM==&quot;usb&quot;, ATTR&#123;idVendor&#125;==&quot;2a48&quot;, MODE=&quot;0600&quot;, OWNER=&quot;woody&quot; 그리고 …! AndroidManifest.xml 파일 수정Android Studio, IntelliJ 또는 Eclipse 등의 IDE/Tools 프로그램에서AndroidManifest.xml 파일을 아래와 같이 작성이 되어 있는지 확인해주세요. 1234&lt;application&gt; (..중략) android:debuggable="true"&gt;&lt;/application&gt; adb 재실행123456789101112# adb가 켜져 있다면 종료 먼저 하기!$ sudo adb kill-server# 아래 중 여러분의 리눅스 환경에 따라 1가지를 골라 udev 서비스를 재시작해주세요.$ sudo /etc/init.d/udev restart$ sudo udevadm control --reload-rules$ sudo udevadm trigger $ sudo reload udev$ sudo service udev restart# 그리고 다시 adb를 실행시켜주세요.$ sudo adb start-server 이로써, no permissions 나 ??????? 가 뜨는 현상은 해결될 수 있을 것입니다. 참고 Writing udev rules, udev 규칙 작성법에 관하여 usb.ids 하드웨어 기기에서 앱 실행]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Platform</tag>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>Fedora</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PNG파일이 아닌 XML파일로 Drawables 파일 지정시 발생되는 에러 (Can't process attribute ... references to other resources are not supported by build-time PNG generation.)]]></title>
    <url>%2Fposts%2F2019%2F08%2F05%2FAndroid-drawables-references-to-other-resources-are-not-supported-by-build-time-png-generation%2F</url>
    <content type="text"><![CDATA[개요간단한 WebView Application을 개발하고, Material Design 사이트에서 아이콘을 내려받아 이를 적용하는 작업을 진행하고 있었습니다. 해당 사이트에서는 PNG 파일과 XML 파일을 내려받을 수 있는데, PNG 이미지 파일의 사이즈는 고정적이기 때문에 되도록 XML 파일을 통해 추가하려고 시도했습니다. (요즘 PNG raw 파일보단 XML을 통해 해상도 파편화 이슈로부터 자유로워지려는 트렌드도 한몫했구요.) 그러던 중, 아래와 같은 오류를 경험하게 된 것이죠. 오류 발생 java.lang.RuntimeException: Error while processing /media/.../baseline_search_24.xml : Can't process attribute android:fillColor="@android:color/white": references to other resources are not supported by build-time PNG generation. File was preprocessed as vector drawable support was added in Android 5.0 (API level 21) See http://developer.android.com/tools/help/vector-asset-studio.html for details. 어떻게 해결해야할까요?사용중인 Gradle 버전에 따라 각기 다르게 적용하면 됩니다. build.gradle (Gradle 1.5 이하)1234567891011android &#123; defaultConfig &#123; // Stops the Gradle plugin’s automatic rasterization of vectors generatedDensities = [] &#125; // Flag notifies aapt to keep the attribute IDs around aaptOptions &#123; additionalParameters "--no-version-vectors" &#125;&#125; 또는, build.gradle (Gradle 2.0 이상)1234567android &#123; defaultConfig&#123; vectorDrawables.useSupportLibrary = true &#125; // ...&#125; 모양으로 build.gradle 파일을 수정하면 됩니다. 왜 발생할까요?PNG과 같은 비트맵 파일을 사용하면 해상도에 따라 모자이크처럼 보이거나, 또는 상당히 작고 흐릿한 이미지로 출력되는 큰 단점이 있습니다. 그래서 중요한 기능에 대한 버튼 및 레이아웃 구성들은 XML와 같은 Vector 파일을 주로 사용하고 있는 추세입니다. 그러나 Android 5.0 롤리팝 (API 21) 이하의 버전의 환경들 모두가, 반드시 Vector 방식의 drawables를 불러올 수 있는 것이 아니기 때문에 반드시 위와 같은 코드들을 입력해야합니다. 참고 Android Developers : Vector drawables backward compatibility solution]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Platform</tag>
        <tag>Java</tag>
        <tag>Kotlin</tag>
        <tag>drawables</tag>
        <tag>PNG</tag>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git clone push pull 등 시도시, (fatal:No path specified. See 'man git-pull' for valid url syntax 발생)]]></title>
    <url>%2Fposts%2F2019%2F07%2F15%2Fgit-fatal-No-path-specified%2F</url>
    <content type="text"><![CDATA[1fatal : No path specified. See &apos;man git-pull&apos; for valid url syntax 아니 분명히 경로가 맞는데..? 왜 안되지.. 했는데 ssh:// 이 프로토콜만 제거하면 되는 것이었습니다. 예를 들어, ssh://git@your.git.repository:samplebranch 라는 주소를 전달받았다면git@your.git.repository:samplebranch 식으로 주소를 고치고 새로 시도해보는 것입니다!]]></content>
      <categories>
        <category>Programming</category>
        <category>Source Code Management</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Source Code Management</tag>
        <tag>Source Control</tag>
        <tag>Version Control</tag>
        <tag>Revision Control</tag>
        <tag>Git</tag>
        <tag>fatal</tag>
        <tag>git-pull</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 16.04 (xenial) apt 안 될 때 (E:Problem executing scripts APT::Update::Post-Invoke-Success 'if /usr/bin/test -w /var/cache/app-info -a -e /usr/bin/appstreamcli; ... ' 발생)]]></title>
    <url>%2Fposts%2F2019%2F07%2F15%2FUbuntu-1604-xenial-Problem-Executing-Scripts-APT%2F</url>
    <content type="text"><![CDATA[뭐지... 또 밀고 다시 깔아야하나? 1234Aborted (core dumped)Reading package lists... DoneE: Problem executing scripts APT::Update::Post-Invoke-Success 'if /usr/bin/test -w /var/cache/app-info -a -e /usr/bin/appstreamcli; then appstreamcli refresh &gt; /dev/null; fi'E: Sub-process returned an error code 위와 같은 오류가 발생시 대처할 수 있는 방법은 아래와 같습니다. 1$ sudo apt-get remove libappstream3]]></content>
      <categories>
        <category>Operating System</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>xenial</tag>
        <tag>apt-get</tag>
        <tag>appstreamcli</tag>
        <tag>libappstream3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 16.04 (xenial) 환경에서 OpenJDK 7 설치하기]]></title>
    <url>%2Fposts%2F2019%2F07%2F15%2FInstall-OpenJDK-7-on-Ubuntu-1604-xenial%2F</url>
    <content type="text"><![CDATA[1.8은 손쉽게 설치 할 수 있으나, 1.7 버전은 없어요...ㅠㅠ 따라서 패키지 저장소를 추가함으로, OpenJDK 1.7을 설치해보도록 합시다. 설치 방법123$ sudo add-apt-repository ppa:openjdk-r/ppa$ sudo apt-get update -y$ sudo apt-get install -y openjdk-7-jdk 위 작성한 문장 세 줄을 순서대로 입력하여 설치를 완료합니다. 다수의 Java 버전 관리하기내용이 상당히 깁니다. 자세한 설명은 ‘이 포스트’에서 확인하세요! Java 버전 확인하기12345678$ java -versionjava version "1.7.0_95"OpenJDK Runtime Environment (IcedTea 2.6.4) (7u95-2.6.4-3)OpenJDK 64-Bit Server VM (build 24.95-b01, mixed mode)$ javac -versionjavac 1.7.0_95]]></content>
      <categories>
        <category>Operating System</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>Java</tag>
        <tag>OpenJDK</tag>
        <tag>xenial</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu/centOS 에서 Java(JDK) 버전을 빠르게 바꾸는 방법 (update-alternatives)]]></title>
    <url>%2Fposts%2F2019%2F07%2F14%2FChange-the-JDK-using-update-alternatives%2F</url>
    <content type="text"><![CDATA[다수의 JDK를 사용하게 되었습니다.Oracle에서 Java SE 유료화 정책을 본격 시행됨에 따라, OpenJDK를 사용하게 되었습니다.그 중에 Java 1.8 버전을 사용하고 있는데, 업무상 1.7 버전도 필요하게 되었습니다. 그런데 일일히 쓸 때마다 환경변수를 바꾸니 보통 번거로운 일이 아닐 수 없었습니다. 따라서 이번 글에서는 Ubuntu나 centOS에서 update-alternatives 명령어를 활용하여,JDK 버전을 적재적시(!) 바꾸는 팁을 소개하고자 합니다. 현재 상황우선 Java가 설치되어있는, 또는 지정되어 있는 위치와 현재 시스템에서 사용되는 JDK 버전을 확인해봅시다. Java 설치 경로123$ which java/usr/bin/java 특별하게 경로를 지정하면서 설치하지 않는 이상 위와 같은 경로 또는 /usr/lib/jvm 디렉토리에 설치가 되는 것을 확인할 수가 있습니다. 실제 Java 버전은…12$ java -version$ javac -version 위와 같은 명령어를 입력해보면 OpenJDK 1.7 또는 1.8 환경을 확인할 수 있습니다. 어… 문제는 이제 발생됩니다. 12345sudo apt-get install openjdk-7-jdk# 또는sudo apt-get install openjdk-8-jdk 기존 설치된 JDK에서 새로운 JDK를 설치하고 나서 버전과 경로를 확인하면새로운 버전과 그에 대한 경로로로 바뀌거나, 바뀌지 않는 문제가 발생됩니다. 따라서필요 JDK 버전을 바꿔 작업하는 상황이 오면 일일히 remove 나 autoremove 또는 purge를 해야할 수도 있을 것입니다. update-alternatives일단 이 명령어를 간략하게 소개하자면 이름에서 보시다시피 alternative 를 update 한다는 것입니다. 뭔 설명이 그래…. 그러니까 ‘대안이 될 만한’, 또는 ‘선택이 가능한 요소’로 사용이 가능토록 교체해준다는 것입니다. 현재 겪고 있는 상황에 빗대자면여기서, 선택이 가능한 요소란 OpenJDK 1.7과 1.8 입니다.위 두 버전 중에 한 버전을 작업이 가능토록 설정해야하는 것입니다. 저를 포함하여 Java 로 무언가를 작업하시는 분들이라면 여기서 바꿔줘야할 부분은$JAVA_HOME, java, javac, javadoc, jar … 아무튼 Java와 관련된 것은 틀림 없을겁니다. 일단 적용해보자java, javac, javadoc, jar … 일일히 바꿔보죠.. 아, 근데 이건 좀 많은데.. 뭐 일단 해봅시다. 12345alternatives --install &lt;link&gt; &lt;name&gt; &lt;path&gt; &lt;priority&gt;alternatives --remove &lt;name&gt;alternatives --config &lt;name&gt;alternatives --display &lt;name&gt;alternatives --set &lt;name&gt; &lt;path&gt; 변수 없이 단순히 update-alternatives 명령어를 입력하면 위와 같은 도움말이 등장합니다. 도움말 내용을 보니, 입력이 가능한 변수값에는 &lt;link&gt;, &lt;name&gt;, &lt;path&gt; 가 있습니다. “아! symbolic link를 활용하는 것이군요!” 네, 그렇습니다. 보통 update-alternatives 에서는 –config 옵션과 name 변수값을 주로 사용합니다.–config 옵션을 통해 관리되는 name 값에 대한 위치 지정할 수 있습니다. 1$ update-alternatives java 라는 명령어를 입력하면, 1234*+ 1 /usr/lib/jvm/java-7-openjdk-amd64/bin/java 2 /usr/lib/jvm/java-8-openjdk-amd64/bin/javaEnter to keep the current selection[+], or type selection number: 라는 화면을 확인할 수 있습니다. 이는, 1번 옵션이 곧 java라는 것을 가리키는 것을 확인할 수 있고,새로운 환경으로 지정할 지 고를 수 있다는 것이죠. 그러면 우리는 여기서, java를 OpenJDK 1.8로 바꾸려면 2번을 누르면 되는 것이죠! 이렇게 javac, jar, javadoc 등을 위와 같은 명령어를 통해 변경하면 됩니다. 그리고 .bashrc 나 .bash_profile (또는 사용하시는 shell 환경에 따라선 .zshrc 등) 파일에서 $JAVA_HOME을 새로 설정해줘야합니다. 12export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdkexport PATH=$PATH:$JAVA_HOME/bin 그런데..잘 생각해보면, 일일히 이런 방법을 쓰는건 정말 불편하지 않을까요? java, jar, javadoc, $JAVA_HOME … 우리가 바꿔야할 항목만 해도 최소한 4건입니다.우리는 개발자이기에 일일히 명령어를 입력하는것은 굉장히 비효율적이라는 것을 알 수 있죠 이렇게 입력하는 동안에, 우리의 소중한 시간 1초는 더 빨리 더 멀리 더 힘차게 가게되고,내 일은 점점 더 못 하고 미루고… 그렇게 야근을 하고… 더 효율적으로 바꾸기따라서 제가 일을 쉽게하는 방법을 제안하고자합니다. 오래 걸렸죠? 지금부터 방법을 소개하자면… 1. OpenJDK 1.7, 1.8를 전부 설치합니다.2. JDK 설치 위치를 전부 파악합니다. (보통 JDK는 /usr/lib/jvm에 설치)3. 별도의 심볼릭 링크를 생성합니다.4. update-alternatives를 통하여 별도의 심볼릭 링크 디렉토리의 java, javac 등을 등록합니다5. 심볼릭 링크를 JDK1.7, JDK1.8 를 자동으로 변경할 수 있도록 쉘 스크립트나 alias로 자동화합니다. 입니다. OpenJDK 1.7, 1.8를 전부 설치이미 설치하는 방법은 검색하시면 너무나 잘 나와있습니다.그러나 (2019.07.14 기준) 현재 OpenJDK 1.7을 단순히 명령어로 설치하기 어렵습니다.따라서 launchpad.net 또는 별도의 repository 를 등록하고, 설치하면 됩니다. 자세한 설명은 ‘이 포스트’에서 확인하세요! JDK 설치 위치를 전부 파악합니다.sudo apt-get install 명령어를 통해 설치하면,보통은 /usr/lib/jvm 디렉토리에 설치됩니다.이 디렉토리에 접근하면 12345678910$ ls -aldrwxr-xr-x 4 root root 4096 7월 15 09:43 .drwxr-xr-x 136 root root 4096 7월 12 17:20 ..-rw-r--r-- 1 root root 2439 3월 28 2016 .java-1.7.0-openjdk-amd64.jinfo-rw-r--r-- 1 root root 2714 4월 26 12:20 .java-1.8.0-openjdk-amd64.jinfolrwxrwxrwx 1 root root 20 3월 28 2016 java-1.7.0-openjdk-amd64 -&gt; java-7-openjdk-amd64lrwxrwxrwx 1 root root 20 4월 26 12:20 java-1.8.0-openjdk-amd64 -&gt; java-8-openjdk-amd64drwxr-xr-x 7 root root 4096 7월 12 17:20 java-7-openjdk-amd64drwxr-xr-x 7 root root 4096 7월 15 09:43 java-8-openjdk-amd64 식으로 나타나게 되는데, 심볼릭 링크는 이름대로 각 버전을 가리키는 것을 알 수 있습니다. 별도의 심볼릭 링크를 생성합니다12$ mkdir -R /opt/jdk$ ln -s /usr/lib/jvm/java-7-openjdk /opt/jdk/current sudo와 chown 옵션을 활용하여 개발에 지장없게끔 설정하실 필요가 있습니다. update-alternatives로 등록합니다우리는 install 옵션을 통해 별도로 생성한 심볼릭 링크 디렉토리 내 파일을 등록시킵니다. update-alternatives install 옵션 사용 방식alternatives --install &lt;link&gt; &lt;name&gt; &lt;path&gt; &lt;priority&gt; 12$ sudo update-alternatives --install /usr/bin/java java /opt/jdk/current/bin/java 1$ sudo update-alternatives --config java 명령어 설명 sudo : 반드시 시스템 root 권한이 필요하기에 입력해야합니다. update-alternatives : 앞서 언급했습니다~ --install : update-alternatives로, 새로운 심볼릭 링크를 등록할 것임을 알리는 옵션입니다. /usr/bin/java : 최종적으로 /usr/bin/java 로 심볼릭 링크가 저장될 것입니다. (which java 입력시 나타나는 심볼릭 링크 위치입니다.) java : java 라는 명령어를 쳐서 java 기능을 활용할 것이기에 입력해야합니다 /opt/jdk/current/bin/java : 별도의 심볼릭 링크를 만들었습니다. 버전을 자유롭게 활용하기 위해 새로 만든 심볼릭 링크입니다. 1 : 숫자가 낮을수록 우선순위는 높습니다. 12345678910대체 항목 java에 대해 (/usr/bin/java 제공) 3개 선택이 있습니다. 선택 경로 우선순� 상태------------------------------------------------------------ 0 /usr/lib/jvm/java-8-openjdk-amd64/bin/java 1081 자동 모드* 1 /opt/jdk/current/bin/java 1 수동 모드 2 /usr/lib/jvm/java-7-openjdk-amd64/bin/java 1071 수동 모드 3 /usr/lib/jvm/java-8-openjdk-amd64/bin/java 1081 수동 모드Press &lt;enter&gt; to keep the current choice[*], or type selection number: 1 위와 같은 방법으로 javac, jar, javadoc 등을 등록합니다. 그리고 update-alternatives –display 옵션을 사용하여 정상적으로 등록되어 있는지 확인합니다. 쉘 스크립트나 alias로 자동화합니다저는 개인적으로 alias 설정이 가장 무난하고 쉽다고 생각합니다. 12345export JAVA_HOME="/opt/jdk/current"export PATH="$PATH:$JAVA_HOME/bin"alias chjdk7="rm /opt/jdk/current &amp;&amp; ln -s /usr/lib/jvm/java-1.7.0-openjdk-amd64"alias chjdk8="rm /opt/jdk/current &amp;&amp; ln -s /usr/lib/jvm/java-1.8.0-openjdk-amd64" 그리고 source 명령어를 입력하여 쉘 환경변수를 등록하면 됩니다.저는 chjdk7 과 chjdk8 명령어를 alias로 등록하여 사용합니다! chjdk7 명령어 입력시12345678$ java -versionjava version "1.7.0_95"OpenJDK Runtime Environment (IcedTea 2.6.4) (7u95-2.6.4-3)OpenJDK 64-Bit Server VM (build 24.95-b01, mixed mode)$ javac -versionjavac 1.7.0_95 chjdk8 명령어 입력시1234567$ java -versionopenjdk version "1.8.0_212"OpenJDK Runtime Environment (build 1.8.0_212-8u212-b03-0ubuntu1.16.04.1-b03)OpenJDK 64-Bit Server VM (build 25.212-b03, mixed mode)$ javac -versionjavac 1.8.0_212 2019년 9월 30일 월요일 오후 11시 35분 오타 수정]]></content>
      <categories>
        <category>Operating System</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>Java</tag>
        <tag>centOS</tag>
        <tag>OpenJDK</tag>
        <tag>update-alternatives</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 54차 '쿠버네티스 살펴보기' : 4강 실습하기 Kubernetes]]></title>
    <url>%2Fposts%2F2019%2F07%2F01%2FTAcademy-54-Kubernetes-4-Pratice%2F</url>
    <content type="text"><![CDATA[이 포스트는 2019년 6월 29일 토요일, SK플래닛 T아카데미에서 진행됐던 세미나에 가서 청강하고 작성했습니다.현재 세미나 강의와 자료는 추후 이 곳에서 확인하실 수 있습니다.노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다.시간 관계상 급하게 진행하신 부분이 있었습니다. 노트 내용이 정확하지 않은 점 참고하시기 바랍니다.AWS Lightsail 서비스로 실습 진행되었습니다. * 발표자 : 김충섭 (퍼플웍스) 님 Kubernetes 실습 시작 TIPalias k=’kubectl’을 입력하면 편하게 명령어를 입력할 수 있습니다. kubectl명령어 apply : Apply a configuration to a resource by filename or stdin get : Display one or many resources describe : Show details of a specific resource or group of resources delete : Delete resources by filenames, stdin, resources and names, or by resources and label selector logs : Print the logs for a container in a pod exec : Execute a command in a container 기타 모든 명령어는 kubectl 입력하면 상세하게 볼 수 있다. 명령과 선언명령1kubectl scale --replicas=3 rs/whoami 선언123456apiVersion: apps/v1beta2kind: ReplicaSetmetadata: name: whoamispec: replicas: 3 위 두 코드는 같은 의미이다. 그러나 실제로는 선언하는 방식을 많이 사용한다. 특정 오브젝트 조회 get describe api-resources : 단축 명령어도 볼수 있다! 12345# 서비스 목록 조회kubectl get service# kubernetes 라는 서비스에 대한 자세한 정보 보기kubectl describe service kubernetes Pod 생성하기1kubectl run whoami --image subicura/whoami:1 guide-03/task-03/whoami-rs.yml 1234567891011121314151617181920212223apiVersion: apps/v1beta2kind: ReplicaSetmetadata: name: whoami-rsspec: replicas: 1 selector: matchLabels: type: app service: whoami template: metadata: labels: type: app service: whoami spec: containers: - name: whoami image: subicura/whoami:1 livenessProbe: httpGet: path: / port: 4567 template selector에서 기재된 pod가 실제로 존재하지 않으면 template에 적힌 항목대로 수행한다. ReplicaSet를 생성하고 Pod 만들기 replicaset Match 되는 pod를 찾는다는 것 ReplicaSet -&gt; Find pod by labels -&gt; Create pod from template 그러나 실제로 많이 쓰지 않는다. Deployment가 내부적으로 ReplicaSet를 사용하고 있고 Replica는 Pods를 만든다. Deployment replicaset을 활용해서 개발용 환경을 구축하여 개발 전략을 수행할 수 있다. 구축 명령어 입력 확인 결과 기존 ReplicaSet에 있는 pods가 종료되고, 그 pods가 속한 ReplicaSet이 종료된다. 버전업된 새 ReplicaSet의 Pods를 실행하고 마찬가지로 해당 Pods가 속한 ReplicaSet은 생존한다.즉, 자연스럽게 버전 업이 되는 모습을 확인 할 수 있다. 결론 아래 주석들이 다소 부정확할 수 있습니다. 1234567891011121314# 해당 히스토리를 본다.kubectl rollout history -f whoami-deploy.yml# 리비전이 2인 히스토리를 본다kubectl rollout history -f whoami-deploy.yml --revision=2# 상태를 확인한다.kubectl **rollout** status deploy/whoami-deploy# 버전업 후 오류 발생시 되돌린다.kubectl rollout undo deploy/whoami-deploy# 해당 버전으로 되돌린다.kubectl rollout undo deploy/whoami-deploy --to-revision=3 ServiceKubernetes NodePort vs LoadBalancer vs Ingress? When should I use what? 라는 제목의 글을 보면 Service를 구성하는 방법으로 Nodeport, LoadBalancer, Ingress가 소개되고 있다. 이에 대한 간단한 구현 방법을 알아보자. NodePort 모든 네트워크에서 통신되도록, 각 노드에 포트를 연다 예제 1234567891011121314apiVersion: v1kind: Servicemetadata: name: my-nodeport-servicespec: selector: # 이 코드에서 selector가 가장 중요함 app: my-app type: NodePort ports: - name: http port: 80 targetPort: 80 nodePort: 30036 protocol: TCP Development 예제 1234567891011121314151617181920212223242526272829303132333435apiVersion: apps/v1beta2kind: Deploymentmetadata: name: redisspec: selector: matchLabels: type: db service: redis template: metadata: labels: type: db service: redis spec: containers: - name: redis image: redis ports: - containerPort: 6379 protocol: TCP---apiVersion: v1kind: Servicemetadata: name: redisspec: ports: - port: 6379 protocol: TCP selector: type: db service: redis 주의반드시 하이픈 3개(---)를 작성해야 하이픈 위 아래 있는 2개 모두 실행됩니다. 실행 및 결과 Load BalancerLoad Balancer는 AWS, GCP 에서 제공하는 서비스를 사용하는 것이 범용적이다.각 노드에 로드밸런서가 생기고 그 로드밸런서로 접속이 된다. Ingress nginx-ingress를 먼저 설치함 (K3S는 내장) ip를 기반으로 도메인을 쉽게 사용할 수 있는 방법 (입력과 동시에 바로 적용) sslip.io xip.io nip.ioex) xxx.xxx.xxx.xxx:1234 → xxx.xxx.xxx.xxx.sslip.io:1234 참고김충섭님 Github]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Cloud</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
        <tag>Kubernetes</tag>
        <tag>Container</tag>
        <tag>Container Orchestration</tag>
        <tag>Server</tag>
        <tag>Desired State</tag>
        <tag>ReplicaSet</tag>
        <tag>Pods</tag>
        <tag>Volume</tag>
        <tag>Services</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 54차 '쿠버네티스 살펴보기' : 3강 실습하기 Docker & Docker Compose]]></title>
    <url>%2Fposts%2F2019%2F07%2F01%2FTAcademy-54-Kubernetes-3-Docker-Compose-Pratice%2F</url>
    <content type="text"><![CDATA[이 포스트는 2019년 6월 29일 토요일, SK플래닛 T아카데미에서 진행됐던 세미나에 가서 청강하고 작성했습니다.현재 세미나 강의와 자료는 추후 이 곳에서 확인하실 수 있습니다.노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다.AWS Lightsail 서비스로 실습 진행되었습니다. * 발표자 : 김충섭 (퍼플웍스) 님 개발 환경 설정jq - docker - k3s - Local path provisioner - code server 설치 Docker 실습 시작 ‘19차 T아카데미 세미나 : 컨테이너 기반 가상화 플랫폼 도커(Docker)의 이해’ 블로그 포스트 참고 1강 도커 개요 및 소개 2강 도커 컨테이너 만들기 3강 이미지 만들고 배포하기 4강 도커 이미지 빌드 환경 만들기 페이지를 참조하며 실습을 합니다. 컨테이너 실행 컨테이너 목록 컨테이너 목록 확인 명령어 1docker ps -a 컨테이너 로그1docker logs xxx 컨테이너 종료1docker stop xxx 컨테이너 삭제1docker rm xxx 이미지 목록1docker images 네트워크 생성1docker network create app-network 네트워크에 연결된 컨테이너 생성123456789# mysql 컨테이너 실행docker run -d \ -e MYSQL_ALLOW_EMPTY_PASSWORD=true \ --name mysql \ --network=app-network \ mysql:5.7# mysql 컨테이너에 접속하여 mysql 실행docker exec -it mysql mysql 이후 동작해야하는 항목 (WordPress 연동 DB 구축) 1234create database wp CHARACTER SET utf8;grant all privileges on wp.* to wp@'%' identified by 'wp';flush privileges;quit mysql 컨테이너 종료 이후 1234567docker run -d -p 8000:80 \ --network=app-network \ -e WORDPRESS_DB_HOST=mysql \ -e WORDPRESS_DB_NAME=wp \ -e WORDPRESS_DB_USER=wp \ -e WORDPRESS_DB_PASSWORD=wp \ wordpress 예제 문제에 대한 제가 작성한 답입니다. 답이 아닐 수 있으니 참고해주세요. 풀이1234567891011121314151617docker run -d -p 27017:27017 \ --network=app-network \ --name mongodb mongo:4docker run -d -p 8887:8887 \ -e PORT=8887 \ -e GUESTBOOK_DB_ADDR=mongodb:27017 \ --network=app-network \ --name apiserver \ subicura/guestbook-backend:latestdocker run -d -p 8888:8888 \ -e PORT=8888 \ -e GUESTBOOK_API_ADDR=apiserver:8887 \ --network=app-network \ --name guestbook \ subicura/guestbook-frontend:latest 이름은 소문자로 지정해주세요 (대문자로 지정하면, 네트워크 결합이 안됩니다) 정리123docker stop xxxdocker rm xxxdocker system prune -a 참고 : prune 시도 화면 이전 이후 Docker-compose 실습12345678910111213141516171819202122232425version: '3'services: mongodb: image: mongo:4 ports: - "27017:27017" restart: always backend: image: subicura/guestbook-backend:latest ports: - "8887:8887" environment: PORT: "8887" GUESTBOOK_DB_ADDR: "mongodb:27017" restart: always frontend: image: subicura/guestbook-frontend:latest ports: - "8888:8888" environment: PORT: "8888" GUESTBOOK_API_ADDR: "backend:8887" restart: always restart:always 이 옵션을 줘야 순서에 상관없이 실행이 되더라도 오류없이 모두 실행이 된다. docker-compose up 을 하면 기재된 순서에 상관없이 1-3-2 2-3-1 3-2-1 1-2-3 등의 랜덤 순서로 실행되기 때문에 반드시 restart:always 옵션을 기재해야한다. depends_on 이 옵션은 docker-compose 구형 버전 작성시 의존성을 명시해 순서대로 실행시킬 수 있다.]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Cloud</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
        <tag>Kubernetes</tag>
        <tag>Container</tag>
        <tag>Container Orchestration</tag>
        <tag>Server</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 54차 '쿠버네티스 살펴보기' : 2강 쿠버네티스 살펴보기]]></title>
    <url>%2Fposts%2F2019%2F07%2F01%2FTAcademy-54-Kubernetes-2-What-is-Kubernetes%2F</url>
    <content type="text"><![CDATA[이 포스트는 2019년 6월 29일 토요일, SK플래닛 T아카데미에서 진행됐던 세미나에 가서 청강하고 작성했습니다.현재 세미나 강의와 자료는 추후 이 곳에서 확인하실 수 있습니다.노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다. * 발표자 : 김충섭 (퍼플웍스) 님 What is Kubernetes?쿠버네티스 인기 Docker는 배포에 대해 큰 특징점이 없다. 서버 2, 3대 정돈? 일일히 코드 입력 가능하지만, 이게 200대 300대 서버라면.. 일일히 서버 구성 코드를 입력하기 어렵다. 이를 위해, Nomad, Docker Swarm 등.. 이에 대한 컨테이너 관리 도구 춘추전국시대가 도래되었다. 오늘날은 Google이 만든 borg를 기반으로 만든 Kubernetes가 표준화! 이에 따라 패키지 매니저도 등장! helm = Kubernetes Package Manager Cloud Support AWS EKS, GKE, Azure Container Service 등 Container Platform Knative Serverless, Istio Service Mesh, kubeflow Machine Learning 등 결론 컨테이너 응용 프로그램의 배포, 확장 및 관리를 자동하는 오픈 소스 시스템 그리스어로 조타수, 조종사라는 뜻 K8s 라고 줄여서 부른다. (ubernete = 8) Google이 만들었지만 CNCF 재단에 기부되어 오픈소스화 특징기본 기능 상태관리 : 상태에 맞춰 자동으로 복구 스케줄링 : 조건에 맞는 노드에 컨테이너 배치 클러스터링 : 가상 네트워크를 통해 하나의 서버에 있는 것처럼 통신 서비스 디스커버리 : 서로 다른 서비스 쉽게 통신 리소스 모니터링 스케일링 Roll-Out, Rollback 빠른 업데이트 1.10 이후(2018/3/27) 많은 부분이 안정화됨 굉장히 빠르고 업데이트, 윈도우용 업데이트 위주로 작동됨 (현재 19.6.29 기준) 다양한 배포 방식 Replica Set Stateful Sets : 클러스터링을 세밀하게 조절하고 싶을 때 사용, 순차적으로 진행하기에 안정적. Job : CronJob 과의 연계 Replication Controller : (현재 Deprecated) Ingress 설정 nginx 설정과 유사 Namespace &amp; Labeling Namespace : 동일한 물리적 클러스터 기반의 복수의 가상 클러스터 Labeling : 각기 다른 컨테이너를 Label로 구별하는 것 RBAC (role-based access control) 누가 어떤 기능을 가지고 있는지 쉽게 제어가 가능하다 누가 : Subjects 어떻게 : Pod 권한을 조정 무엇을 : Operations(행동) 조정 기본개념 Desired State 개발자나 관리자가 궁극적으로 원하는 서버의 상태 현재 상태(Current State)를 서버 관리자가 원하는 상태(Desired State)로 변경해야한다. 서버 관리자가 원하는 서버의 갯수를 지정하면, Kubernetes가 이에 판단하여 자동으로 작동함. Kubernetes Object (The Illustrated Children’s Guide to Kubernetes 참고) Nametags : Label과 같은 의미 Pods : 컨테이너들의 집합 ReplicaSet : 여러 동일한 Pods을 여러 개로 확장 k8s service Volumes Namespace YAML 파일로 정의12345678...spec: containers: - name: busybox image: busybox:1.25... 결론 원하는 상태(Desired State)를 다양한 오브젝트(Object) 에 라벨(Label)을 붙여 정의(YAML)하고, API 서버에 전달한다. 아키텍쳐 전체적인 흐름 kubectl - master - Many Nodes (In master) Api Server - One Node (In Node) kubelet - pod - master kubectl 명령어로 작동 Master - Node Master 다양한 모듈이 확장성 고려 보통 3대를 구성하여 안정성 높임 Scheudler, Kube-Controller, Cloud-Controller가 각각 존재 API Server Controller Manager : 다양한 컨트롤러를 관리하고 API Server와 통신하여 작업 수행 Scheduler : 서비스를 리소스 상황에 맞게 적절 노드에 배치 etcd : 가볍고 빠른 분산형 key-value 저장소 / 설정 및 상태를 저장 Node 마스터 서버와 통신하면서 필요한 Pod을 생성하고 네트워크와 볼륨을 설정 kubelet Proxy Docker(containerd 또는 rkt 또는 Hyper) 결론 단점 복잡한 개념 : 확장성까지 고려하게 된다면 굉장히 많은 개념 습득을 필요하다. 복잡한 설치 : 설치 방식만해도 20가지가 넘을 정도로 복잡한데, 이를 통일하여 설치하는 방법을 따로 익혀야한다. 무거운 환경 : 리소스 사용이 많다. 복잡한 설정 파일 : Docker Swarm과는 달리 Config 코드가 2배, 3배 넘게 길다 질문 IP 주소를 일일히 입력하여 서비스과 서비스 사이 통신을 진행해야하나요? IP 주소를 직접 입력하지 않고, 서비스의 이름으로 직접 접근하는 것이 일반화. 실습시 minikube 쓰지 않는 이유는? 실습할때 서로 다른 환경때문에 생기는 이슈가 많다.보안 네트워크 프로그램이라도 설치되어 있을시 해결 자체가 매우 어렵다. 참고김충섭님 블로그 (subicura blog)]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Cloud</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
        <tag>Kubernetes</tag>
        <tag>Container</tag>
        <tag>Container Orchestration</tag>
        <tag>Server</tag>
        <tag>Desired State</tag>
        <tag>ReplicaSet</tag>
        <tag>Pods</tag>
        <tag>Volume</tag>
        <tag>Services</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 54차 '쿠버네티스 살펴보기' : 1강 컨테이너]]></title>
    <url>%2Fposts%2F2019%2F07%2F01%2FTAcademy-54-Kubernetes-1-Container%2F</url>
    <content type="text"><![CDATA[이 포스트는 2019년 6월 29일 토요일, SK플래닛 T아카데미에서 진행됐던 세미나에 가서 청강하고 작성했습니다.현재 세미나 강의와 자료는 추후 이 곳에서 확인하실 수 있습니다.노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다. * 발표자 : 김충섭 (퍼플웍스) 님 도커가 등장하기 전 서버 운영 자체 운영 → 설정 관리 도구 → 가상 머신 → 클라우드 → PaaS → 도커 → 쿠버네티스 → 서비스메시 서버의 상태를 관리하기 위한 노력이 이렇게 많다. 자체 서버 운영 서버를 설정하기 위한 많은 노력과 시간이 필요하다. 성능이 좋은 걸 미리 구매하고 효율적인 사용을 위해 여러 애플리케이션을 설치하게 되었다. 과거, 어려운 서버 상태 관리소프트웨어 버전 업그레이드를 수행했다?그 이후 어떻게 동작될지, 어떤 결과를 초래할지에 대해 정확히 알고 있어야한다.(와르르 무너지거나, 운이 상당히 좋으면 아무렇지 않게 동작이 잘 되거나!) 서버가 잘 돈 것처럼 보이지만, 카드로 탑 쌓듯이 언제 어떻게 무너질 지 모르는 상태로 진행되는 것이다. 서버 이슈가 어떤 것이든, 어떠한 문제이든, 무조건 서버 관리자가 있어야하며,서버 관리자의 피로는 물론이거니와 심각한 상태이기에 메이저 버전을 업그레이드 해야함에도 불구하고,그에 따른 후속 조치와 결과에 벌벌 떨어야 하기 때문에 혁신 자체가 어려운 상태가 됐다. 이로 인해… 설정 관리 도구의 등장 명령어를 통해 서버 관리를 지양하지 않음 선언적 서버 상태 정의 불완전하지만, 서버의 상태가 재현 가능하다. 소스 관리나 코드 리뷰를 통해 서버 운영의 협업이 가능하다. Ansible Demo 영상 참고 영상에서 확인 할 수 있듯이 이처럼 다양한 환경 변수가 존재. 좀 쉬워졌지만 결국엔 원하는 도구에 대한 개념과 설정 값들을 정확하게 이해해야한다. 가상머신 등장 한 서버에 여러 가상 서버 설치 가능 다양한 Java, 데이터 베이스 쉽게 사용 서버 상태 자체를 이미지로 저장 가능 새 서버를 만들고, 기존 서버 내용 복사 가능 Mutable(변할 수 있는) vs. Immutable (변하지 않는) mutable새 애플리케이션을 업데이트 immutable새 버전이 설치된 서버 상태를 이미지로 만들고 교체. 대부분 완벽한 상태로의 전환이 가능하다. 시스템의 mutable한 부분을 immutable하게 바꾸기 위해선, 복제 등에 대해 상당한 시간과 노력이 필요하다. 그리고, 이에 따라 시스템 자원에 대해 상당히 의존적이다. 클라우드 등장 AWS, GCP, Azure 등 하드웨어 파편화 문제 해결, 가상 환경으로 아키텍처 구성 가능 이미지 기반의 다수 서버 관리 가능 그러나모든 개발자가 하나의 애플리케이션 시스템을 어떻게 만들었는지 정확히 모른다 처음부터 다시 만들기 어렵다 편의성 측면에서 관리가 어렵다 PaaS 등장 Heroku, Netlify, AWS Elastic Beanstalk, GCP App Engine 등 서버 운영하는 것은 복잡하고 어려우므로, 개발자 소스 코드만으로 배포 가능함. 일반화된 프로비저닝 방법 제공 (정확한 방식을 잘 따르면 쉽게 배포가 가능) Netlify Tutorial 비디오 Github 프로젝트를 참고하여 Basic build settings 작성하고, 웹 상으로 시스템을 배포하기 기존 클라우드보다 손쉽고 빠른 서비스 런칭이 가능하다. 그러나… PaaS 방식에 맞게 애플리케이션 작성 (버전 의존성이 상당히 높음) 서버 원격 접속 시스템을 제공하지 않음 파일 시스템을 직접 사용할 수 없음 패키지 설치 관리자에 대해 제한적 로그 수집 자체를 제한적인 방식을 이용해야 한다 배포에 대한 새로운 패러다임 자체를 이해해야 한다. 크론잡, 데이터 분석, 로그 분석, 앱 성능 모니터링, A/B 배포, Canary 배포, 네트워크 및 스토리지 설정에 제한적 즉, 조금 더 심층적으로 다룰 수 있는 환경을 제공하지 않아 다양한 이슈들을 세밀하게 대응하기가 상당히 제한적이다. Docker 등장 ‘19차 T아카데미 세미나 : 컨테이너 기반 가상화 플랫폼 도커(Docker)의 이해’ 블로그 포스트 참고 1강 도커 개요 및 소개 2강 도커 컨테이너 만들기 3강 이미지 만들고 배포하기 4강 도커 이미지 빌드 환경 만들기 리눅스 커널의 여러 기술 활용 Host OS 위에 Docker Engine이 직접, 각각의 앱들을 격리시킴 특정 회사나 서비스에 종속되지 않음 개발 서버를 쉽게 만들 수 있으며 테스트 서버 생성도 간편함 서비스들의 배포 방식이 제각각 다른데, 이를 표준화된 명령어를 제공함으로 해결 Dockerfile 이용하여 이미지 만들고 재현 가능 이미지 저장소로 저장하고 운영서버에서 이미지를 불러오기 간편함 환경변수 제어 가능, 외부 스토리지와 링킹 가능 가상머신 처럼 사용하지만 성능저하가 거의 없음 이미지 빌드 기록이 남음 코드와 설정으로 관리 가능 오픈소스 Blue - Green 배포 앱 업데이트를 위해 서비스를 종료했어야했지만, 현재는 이를 컨테이너를 교체하는 방식으로 사용 가능 Service Discovery 복잡한 기술을 사용자가 일일히 했지만, 이는 개선했음. Key/Value Store에 해당 서버 주소가 기록이 되어 있기 때문에, 서버 주소를 추가하고 기입하면 자동으로 반영된다. docker-gen Docker Container가 생성되면 이에 대한 이벤트가 발생되고, 원하는 작업을 자동으로 수행해주는 도구 컨테이너 오케스트레이션 여러 대의 서버와 여러 개의 서비스를 편리하게 관리해주는 작업 스케줄링 컨테이너를 적당한 서버에 배포해주는 작업 자동으로 스케일링 업/다운이 가능 클러스터링 여러개 서버를 마치 하나의 서버처럼 작동 여러 클러스터를 묶어준다 그 이외 Service Discovery, Logging Monitoring 등이 있다. 현재 Kubernetes가 표준화 되어 있다. 서비스 매시 등장 김충섭님 : “현재 가장 트렌드한 기술이라고 생각합니다.” 서비스마다 Proxy가 대신 서비스를 재시작 등을 할 수 있음 Fault Injection, Distributed Tracing, Security, Authentication 등이 기존 방법에서 추가된 기능 Library가 아니라 Proxy를 사용한다 서비스A &lt;-&gt; 서비스 B 요청은 각각 서비스에 존재되어 있는 Proxy를 통해 교신한다. 결론위 과정들은 모두 서버 상태를 관리하기 위한 노력! 쉽고 편리하게 서버 관리를 하기 위한 필요성에 등장 Immutable 하게 앱, 스토리지 또는 로그를 분리하여 관리 확장 가능한 설계]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Cloud</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
        <tag>Kubernetes</tag>
        <tag>Container</tag>
        <tag>Container Orchestration</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 19차 '컨테이너 기반 가상화 플랫폼 도커(Docker)의 이해' : 4강 도커 이미지 빌드 환경 만들기]]></title>
    <url>%2Fposts%2F2019%2F06%2F28%2FTAcademy-19-Docker-4-Image-Developing-Environment%2F</url>
    <content type="text"><![CDATA[이 포스트는 2018년 1월 17일 수요일에 진행됐던 세미나 강의 영상을 시청하고 작성했습니다.세미나 강의는 이 곳을 눌러 시청하실 수 있습니다. 노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다. * 발표자 : 김충섭 (퍼플웍스) 님 지속적 통합 및 전달 (CI/CD)란?CI Continous Integration, 지속적 통합 빠르고 효과적으로 제품을 출시하기 위해 지속적으로 소스를 통합하고 빌드하고 테스트하고 배포하는 과정이 필요하다. CI는 보통 테스트/빌드까지의 과정을 이야기하고… CD Continuous Delivery, 지속적 배포 CD는 여기에 추가로 전달/배포까지 지칭한다. Microsoft Azure DevOps 시스템을 참고하자면 위 사진에서, 일반적인 CI/CD 사용 패턴을 알 수 있는데 CI는 2, 3, 5에 해당되는 부분이고, 그리고 나머지 부분은 CD에 해당되는 부분이다.따라서 CI와 CD는 연동적이고 연속적이라고 부분이고 전체적인 하나의 과정으로 진행한다고 보면 되겠다. Continuous Integration Tools개발자들과 기업체에서 주로 사용하는 툴과 언어들을 랭크로 확인할 수 있는, stackshare 에서 ‘What are the best Continuous Integration Tools?’ 이라는 기사를 작성했었는데, 그 기사에 의하면 Jenkins, Travis CI, Circle CI 등이 주로 사용한다고 말한다. 이번 실습에서는 Jenkins 에 대해서 다루도록 하겠다. Jenkins소개 빌드, 테스트, 코드 분석, 배포, 알람 등 다양한 기능 제공 Master / Agent 구성 (하나의 Master에 수십, 수백개의 Agent 사용 가능) 1400여개가 넘는 플러그인, Pretty But Old UI 무료 실습 노트에 기록하는 것보다 실습을 진행했고, 직관적이기 때문에 별도로 기록한 부분은 없었습니다.따라서 위에 기재된 링크를 따라 들어가셔서 실습 자료를 내려받아 진행하시면 되겠습니다. pipeline : Stage 별로 작업 만들기 Do not allow concurrent builds 체크 : 한 빌드를 진행중이면, 연속적으로 빌드를 진행하지 않도록 한다. GitHub project : GitHub Project 주소를 입력하면, GitHub에 업로드된 프로젝트를 활용하며 빌드한다.]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 19차 '컨테이너 기반 가상화 플랫폼 도커(Docker)의 이해' : 3강 이미지 만들고 배포하기]]></title>
    <url>%2Fposts%2F2019%2F06%2F28%2FTAcademy-19-Docker-3-Develop-and-Distribute-the-Image%2F</url>
    <content type="text"><![CDATA[이 포스트는 2018년 1월 17일 수요일에 진행됐던 세미나 강의 영상을 시청하고 작성했습니다.세미나 강의는 이 곳을 눌러 시청하실 수 있습니다. 노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다. * 발표자 : 김대권 (Docker Meetup Seoul 운영자) 님 구성요소Base Image 초기rootfs + Base Image 로 구성. Run 실행 후rootfs + Base Image + Install xxx (Container에 구성요소 추가) Custom Image Base Image + Container 구성요소 + Commitrootfs + Base Image + xxx 컨테이너를 이미지로 저장하기명령어로 이미지 생성하기 실습 123docker run -it ubuntu:16.04 bash# apt-get update# apt-get install -y git 또 다른 터미널을 실행하여 작성 1234567docker psdocker diff &lt;CONTAINER_ID&gt;# git 이라는 version으로 태그한 ubuntu image가 생성된다.docker commit &lt;CONTAINER_ID&gt; ubuntu:gitdocker run -it ubuntu:git bash diff와 commit 명령어docker diff : 이미지의 변동사항을 확인할 수 있는 명령어docker commit : Base Image 에 추가 구성사항을 더하여 새로운 이미지로 생성 Dockerfile로 이미지 만들기 Dockerfile : 이미지 생성 과정을 기술한 Docker 전용 DSL Dockerfile을 원하는 디렉토리에 만들어보자. 12touch Dockerfilevi Dockerfile ubuntu 16.04 Base Image에 git을 설치하자 123FROM ubuntu:16.04RUN apt-get updateRUN apt-get install -y git 컨테이너는 반드시 상호작용 상태에서 작동되서는 안된다.따라서 -y 옵션을 줘야 상호작용을 요구하지 않으며, 정상적으로 실행이 된다. 위 방법대로 진행 후 git2 라는 버전이름을 갖춘 이미지를 생성해보자. 12cat Dockerfiledocker build -t ubuntu:git2 . Dockerfile 작성시 알아야할 명령어FROM Base Image 지정을 의미한다.FROM &lt;Base Image 이름&gt; 1FROM ubuntu:git ADD 파일 추가ADD &lt;추가할 파일&gt; &lt;파일이 추가될 경로&gt; 현재 Directory에 있는 내용들이 Dockerfile로 추가할 수 있다. RUN 원하는 명령어 실행RUN &lt;명령어&gt; 1RUN apt-get install -y git 단, Interactive 내용이 있을 경우 Build가 되지 않는다. WORKDIR 작업 디렉터리 변경 (cd 명령어와 유사) 1WORKDIR /tmp ENV 환경변수 기본값 지정ENV AWESOME_VAR FOOVAR 1ENV JAVA_HOME=/opt/jdk/current EXPOSE 컨테이너로 실행시 노출시킬 포트를 선언한다EXPOSE &lt;포트 번호&gt; Docker 가 자동으로 내부 포트를 개방시킨다. 단, -p 옵션을 사용하여 반드시 외부에서도 접근을 허용토록 설정해야한다. 1EXPOSE 8080 22 CMD 이미지의 기본 실행 명령어 지정 1CMD /bin/bash Docker Hub Docker Hub는 Docker에서 공식으로 제공하는 Docker Registry 사이트이다. https://hub.docker.com docker tag1docker tag wgtech/docker_tutorial:latest wgtech/docker_rename:latest docker_tutorial:latest 태그의 이미지 손실 없이, docker_rename:latest 태그의 이미지가 추가된다. docker login 터미널 시스템과 Docker Registry 동기화 docker push 생성된 이미지를 Docker Registry로 업로드. 1docker push wgtech/docker_tutorial:latest docker rmi Local에서 생성된 이미지를 제거 docker pull Docker Registry에 업로드 되어 있는 이미지를 내려받는 명령어 1docker pull wgtech/ubuntu:latest]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 19차 '컨테이너 기반 가상화 플랫폼 도커(Docker)의 이해' : 2강 도커 컨테이너 만들기]]></title>
    <url>%2Fposts%2F2019%2F06%2F28%2FTAcademy-19-Docker-2-How-To-Make-Container%2F</url>
    <content type="text"><![CDATA[이 포스트는 2018년 1월 17일 수요일에 진행됐던 세미나 강의 영상을 시청하고 작성했습니다.세미나 강의는 이 곳을 눌러 시청하실 수 있습니다. 노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다. * 발표자 : 김충섭 (퍼플웍스) 님 도커 설치하기Linux1curl -s https://get.docker.com/ | sudo sh Mac or WindowsDocker for Mac / Docker for Windows 설치 Windows 의 경우… Switch to Linux containers 를 눌러 Linux Container 로 변경. Docker 옵션 창에서 Expose daemon on tcp://localhost … 찾아 클릭 MacOS 는 xhyve를 사용, Windows 는 Hyper-V 사용 wgtech 추가 코멘트) 특히 Windows 사용자들은 조심해야할 점은, Virtualbox이 설치된 환경인 경우이다.Virtualbox도 Hyper-V를 점유하기 때문에, Virtualbox를 삭제해야할 것을 권장한다. 설치 완료 후 확인하기1docker version 컨테이너 실행하기‘run’ commandubuntu1docker run ubuntu:16.04 그러나 실행 이후 Process 가 바로 종료된다. 그래서 컨테이너 내부의 Shell 을 따로 실행해줘야한다. 따라서 이번엔, 별도 command를 추가하여 실행해보자. 1docker run --rm -it ubuntu:latest /bin/sh /bin/sh 을 사용하면, 컨테이너 내부에서 Shell이 실행된다. TIP : –rm 옵션과 -it 옵션 –rm : 컨테이너가 종료하면, 컨테이너는 즉시 삭제한다.(이 옵션을 지정하지 않으면, 프로세스에 남아 있으며 일일히 docker rm 로 컨테이너를 삭제해야한다.) -it : Interactive, 명령어 입력 가능 상태로 전환 CentOS1docker run --rm -it centos:7 /bin/sh ubuntu 실행 예시처럼,CentOS 7 버전의 이미지를 내려받아 컨테이너로 run 시키면서 Shell 을 실행하도록 초기화한다.그리고, 실행한 컨테이너를 종료하면 자동으로 그 컨테이너가 제거된다. Web Application v2다음은 발표자님께서 작성하신 애플리케이션을 활용하며 컨테이너를 올려보자. 12345docker run -d \-p 4568:4567 \-e ENDPOINT=https://workshop-docker-kr.herokuapp.com/ \-e PARAM_NAME=haha \subicura/docker-workshop-app:2 TIP : 코드 속 설명 \ : 명령어의 끝이 아님을 알린다. -d : 실행된 상태로 멈춤 -p : 4568 포트로 컨테이너 4567 포트로 연결. (외부 4568 → 컨테이너 4567) -e : 환경 변수 지정. subicura/docker-workshop-app:2 : subicura 라는 이름의 Docker Hub 계정이 보유한, docker-workshop-app 라는 이미지의 ‘2’라는 태그를 의미하며, 이에 해당되는 이미지를 가리킨다. Web Application v3위에 내용과는 조금 다르게, 버전3 애플리케이션을 활용해본다. 123456docker run -d \-p 4569:4567 \-e ENDPOINT=https://workshop-docker-kr.herokuapp.com/ \-e PARAM_NAME=haha \-e PARAM_MESSAGE=호호호 \subicura/docker-workshop-app:3 위 명령어를 작성하여 실행한 컨테이너를 종료하거나 삭제하지 않는다면 기존 v2 에서 4568이라는 포트를 사용중이기때문에, 동일한 포트를 입력하면 실행이 되지 않는다. Redis Redis 는 메모리 기반의 다양한 기능을 가진 스토리지 1docker run --name=redis -d -p 1234:6379 redis 위 Redis 컨테이너를 실행하고나서 확인해보는 방법은 Telnet으로 하면 되며Telnet 테스트는 흔히 아는 ‘그 Telnet’을 사용하거나,그마저도 컨테이너로 올려 실행하고 싶다면 이 분의 이미지를 활용하면 된다.아래 2가지 방법 중 플랫폼에 맞춰 코드를 작성해본다. 12345# macOSdocker run --rm -it mikesplain/telnet docker.for.mac.localhost 1234# Windowsdocker run --rm -it mikesplain/telnet docker.for.win.localhost 1234 그럼 아래와 같은 내용이 나올 것이다 Unable to find image ‘mikesplain/telnet:latest’ locallylatest: Pulling from mikesplain/telnetc52e3ed763ff: Pull completea3ed95caeb02: Pull completeDigest: sha256:11fa2b96776f5d34511452ad2b76eafad69321e456ac6653482eadb9d98c52a7Status: Downloaded newer image for mikesplain/telnet:latest 곧 이어 아무런 반응이 나오지 않는다면 다음과 같은 명령어를 입력하면서 상태를 확인해본다. keys * *0SET hello world+OKGET hello$5world MySQL12345678# run : 컨테이너를 실행만 한다. 실행 이후 추가 명령어를 입력할 일이 없을 때 주로 사용한다.docker run -d -p 3306:3306 \-e MYSQL_ALLOW_EMPTY_PASSWORD=true \--name mysql \mysql:5.7# exec : 컨테이너가 running 상태라면, 입력된 추가 명령어를 담아 컨테이너에 직접 접근하여 명령을 수행한다.docker exec -it mysql mysql TIP : docker run 과 exec exec : run 명령어와는 달리, 컨테이너에 접속할 때 사용하며 일반적으로 컨테이너 안에 SSH Server 등을 설치하지 않고 접속한다. Wordpress123456docker run -d -p 8080:80 \-e WORDPRESS_DB_PASSWORD=wp \-e WORDPRESS_DB_USER=wp \-e WORDPRESS_DB_NAME=wp \-e WORDPRESS_DB_HOST=docker.for.mac.localhost \wordpress 정상적으로 실행이 된다면, localhost:8080 를 브라우저에 입력하여 접속해본다.처음 실행된 것이라면 초기 환경 설정 화면이 나올 것이다. Tensorflow 손쉽게 머신러닝을 할 수 있는 툴이다. Python과 Tensorflow와 관련된 라이브러리를 별도로 설치하지 않더라도 가능. 1docker run -it -p 8888:8888 tensorflow/tensorflow 그 이외의 명령어ps12345# 실행중인 또는 정지된 컨테이너 목록 확인docker ps# 모든 컨테이너들 각각의 상태(실행, 중단 등의 현재 상태)들을 체크할 수 있다.docker ps -a stop12# 컨테이너 중지하기docker stop [CONTAINER ID] CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMESc1ae9b80e569 redis “docker-entrypoint.s…” 14 minutes ago Up 14 minutes 0.0.0.0:1234-&gt;6379/tcp redise12f3405413c subicura/docker-workshop-app:2 “/bin/sh -c ‘bundle …” 24 minutes ago Up 24 minutes 0.0.0.0:4568-&gt;4567/tcp suspicious_jones 현재 Running인 Docker 컨테이너 c1ae9b80e569, e12f3405413c 를 중지하고 싶다면 123456docker stop c1 e1#또는docker stop c1ae9b80e569 e12f3405413cdocker stop c1ae9b80e569 &amp;&amp; docker stop e12f3405413c... rm현재 중지된 컨테이너를 제거한다.중지 상태와 제거 상태는 엄밀히 다르다중지 상태는 컨테이너 실행을 일시정지하는 것으로 생각하고, 제거상태는 저장된 컨테이너를 제거하는 것으로 생각하면 이해가 쉬울 것이다. 123# 사용 예시docker ps -a # 중지된 컨테이너 확인docker rm 7a 0d c1 e1 c8 logs컨테이너의 로그를 직접 확인할 수 있다. 123docker logs [CONTAINER ID]docker logs -f b62 -f : 새로 생성된 로그를 실시간으로 확인 할 수 있다. images현재 Docker 시스템에 설치된 이미지 목록 확인할 수 있다. 1docker images REPOSITORY TAG IMAGE ID CREATED SIZEwordpress latest 5e5e0b1aa9dd 7 days ago 447MBubuntu latest 4c108a37151f 7 days ago 64.2MBredis latest 3c41ce05add9 2 weeks ago 95MBmysql 5.7 a1aa4f76fab9 2 weeks ago 373MBmysql latest c7109f74d339 2 weeks ago 443MBwgtech/notebook django ee465632331e 4 weeks ago 903MBcentos latest 9f38484d220f 3 months ago 202MBsubicura/docker-workshop-app 2 0fe78e486e9f 17 months ago 299MBmikesplain/telnet latest 16a7ed249fe6 3 years ago 4.79MB pullDocker Hub와 같은 Docker Registry 등에서 이미지를 내려받는다. 1docker pull ubuntu:latest rmi현재 시스템에 설치된 이미지를 삭제한다. 1docker rmi mysql 실행중인 이미지는 삭제되지 않는다. 컨테이너는 이미지를 기반으로 생성되기 때문이다. 컨테이너는 이미지로부터 파생된 것이다. 컨테이너가 실행되어 있으면 그 컨테이너가 영향 받은 이미지는 제거가 불가능하다 네트워크 만들기network create 도커 컨테이너끼리 통신할 수 있는 가상 네트워크를 만든다. 12345678910docker network create [OPTIONS] NETWORK# 이번 실습은, Wordpress 컨테이너와 MySQL 컨테이너가 통신할 네트워크를 만들어본다.docker network create app-network # 첫번째 컨테이너 생성 후 네트워크 연동docker run --name=ubuntu -it --network=app-network ubuntu /bin/sh# 두번째 컨테이너 생성 후 네트워크 연동docker run --name=ubuntu2 -it --network=app-network ubuntu /bin/sh network connect 기존에 생성된 컨테이너에 네트워크를 추가한다. 123docker network connect [OPTIONS] NETWORK CONTAINERdocker network connect app-network mysql run with network WordPress를 app-network에 속하도록하고, 이에 대한 DB는 mysql에서 가져다 쓸 수 있도록 한다. 123456docker run -d -p 8080:80 \-e WORDPRESS_DB_HOST=**mysql** \-e WORDPRESS_DB_NAME=wp \-e WORDPRESS_DB_USER=wp \-e WORDPRESS_DB_PASSWORD=wp \wordpress Volume Mount-v 옵션 호스트 OS의 볼륨과 실제로 연동하도록 작업할 수 있다. (컨테이너의 볼륨이 시스템 볼륨의 지정 위치와 동기화하여 작동한다.) DB 또는 DBMS 등 휘발적인 사용이 권장되지 않는 환경에서 주로 사용된다. Docker ComposeDocker for Mac / Windows 환경은 Docker Compose가 자동으로 설치되어 있다. docker-compose.yaml 파일 작성다음은 mysql, wordpress 컨테이너를 다수의 명령어 없이 일일히 작성하는 파일 방식이다.이 방법은 선언 방법이라고 한다. 1234567891011121314151617181920212223version: '2'services: db: image: mysql:5.7 volumes: - ./mysql:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: wordpress MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: image: wordpress:latest volumes: - ./wp:/var/www/html ports: - "8000:80" restart: always environment: WORDPRESS_DB_HOST: db:3306 WORDPRESS_DB_PASSWORD: wordpress]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T아카데미 토크ON세미나 19차 '컨테이너 기반 가상화 플랫폼 도커(Docker)의 이해' : 1강 도커 개요 및 소개]]></title>
    <url>%2Fposts%2F2019%2F06%2F28%2FTAcademy-19-Docker-1-Introduce%2F</url>
    <content type="text"><![CDATA[이 포스트는 2018년 1월 17일 수요일에 진행됐던 세미나 강의 영상을 시청하고 작성했습니다.세미나 강의는 이 곳을 눌러 시청하실 수 있습니다. 노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다. * 발표자 : 김대권 (Docker Meetup Seoul 운영자) 님 Docker의 등장 솔로몬 하익스(Solomon Hykes), PyCon 2013 Lighting Talk (The Future of Linux Containers) Hello World 찍어보기 로컬/호스트 시스템에서 Hello World 출력 12echo "Hello World"# Hello World Docker를 통해 Hello World 출력 1234docker run -it ubuntu:latest echo "Hello World"# root@d2af7da4b97d:/# Hello World# root@d2af7da4b97d:/ 겉으로는 똑같아보이지만 실환경은 서로 다르다. 컨테이너컨테이너는 가상 환경인가요?각각의 VM = 서로 다른 환경, 각각의 컨테이너 = 서로 다른 환경 컨테이너는 VM인가요?Virtual Machine 은 하드웨어 가상화 소프트웨어로 구현된 하드웨어 컨테이너는 하드웨어 가상화가 아님. OS에서 지원하는 기능을 사용 격리된 환경에서 프로세스를 실행 즉, 컨테이너는 하드웨어 가상화 없는 격리된 환경에서 실행되는 프로세스이다.Docker와 chroot 명령어는 매우 유사하다. chroot는 Root Directory를 바꿔주는 명령어다. 컨테이너 사용예시MySQL Docker로 MySQL 설치 1docker run -d -p 3306:3306 --name mysql mysql:5.7 설치 확인 12telnet 0.0.0.0:3306# 미설치시 Mac환경은, brew install telnet WordPress (MySQL Container가 실행된 이후)1docker run --name wordpress --link mysql:mysql -p 8080:80 -d wordpress 이미지1. 특정 프로세스를 실행하기 위한 환경 계층화된 파일 시스템 이미지는 파일들의 집합 프로세스가 실행되는 환경도, 결국 파일들의 집합이다. 2. 작동되는 상태 Docker 아키텍쳐리눅스 머신에서의 Docker 컨테이너를 네이티브하게 지원 컨테이너 = 호스트의 프로세스 배포판에 따라 차이는 있지만, 대부분은 지원된다. 실제 Docker Container 배포에는 리눅스 머신을 사용 Docker for macOS xhyve 와 교신 macOS의 가상화 방식 (경량 가상 머신) 컨테이너 = xhyve에서 실행된 프로세스 호스트 머신과 자연스럽게 결합 네트워크 / 볼륨 등 호스트 머신 처럼 사용 가능 Virtual Machine on macOS (macOS &lt;-&gt; Virtualbox) 일반적인 가상 머신 컨테이너 = 가상 머신의 프로세스 네트워크 / 볼륨 설정이 까다로움 클라이언트는 환경 변수를 참조해서 서버에 접속 Local Client &amp; Remote Docker Server (macOS &lt;-&gt; Linux Server) 원격 리눅스 서버에 존재한 Docker와의 연결 컨테이너가 필요한 이유여러가지의 상황과 환경의 기반의 컴퓨터와 하드웨어 환경에서 동일한 환경내로 변경 또는 관리를 수월해야하는 필요성에 대해 등장. Dockerfile 이란깨끗한 환경으로부터 애플리케이션 실행 환경까지 최단경로]]></content>
      <categories>
        <category>Seminar</category>
        <category>T Academy</category>
        <category>DevOps</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>T Academy</tag>
        <tag>Notes</tag>
        <tag>DevOps</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NumberPicker Wheel/Scroll(휠스크롤) 방식으로 바꾸고, 수정 못 하도록 포커스 막기]]></title>
    <url>%2Fposts%2F2019%2F06%2F10%2FAndroid-NumberPicker-Wheel-Scroll-Focus-Block%2F</url>
    <content type="text"><![CDATA[시작하기 전에제가 속한 팀에서 작업한, Notebook 프로젝트는 Android로도 개발했습니다.웹으로 작업한 디자인과 최대한 동일한 환경을 제공하기 위하여 휠스크롤이 가능한 Picker(선택기) 위젯이 필요했습니다.커스텀 작업이 가능한 NumberPicker가 최적이라는 것을 확인했고, 이에 따라 작업을 하기 시작했습니다.. 그러나, 문제가 생겼습니다. 일단 기본 옵션으로 휠스크롤 모양으로 바뀌지 않다는 것,그리고 Picker 의 값을 누르면 값이 수정이 된다는 문제였습니다. NumberPicker 휠스크롤 모양으로 바꾸기기존 NumberPicker는, 위 사진 처럼 +/- 버튼이 있는 형태였습니다.그러나, 현재 우리가 많이 사용하는 앱은 이런 디자인을 잘 사용하지 않습니다. 따라서 바꿔보겠습니다. 해결 방법API Level 11 (허니콤) 부터 적용할 수 있습니다 1234567private NumberPicker npDetailSentence;/** * 중략 */npDetailSentence.setWrapSelectorWheel(false); NumberPicker의 값을 수정 할 수 없도록, 포커스 막기위에서 언급한 내용대로, 아래 사진과 같이 휠스크롤 디자인으로 변경했습니다.그런데 문제가 생겼습니다. 위와 같은 이미지처럼, 값을 누르면 변경하는 키보드가 올라옵니다.따라서 이 값을 수정하지 못하도록 포커스 자체를 막도록 해봅시다. 해결 방법123456789private NumberPicker npDetailSentence;/** * 중략 */npDetailSentence.setDescendantFocusability( NumberPicker.FOCUS_BLOCK_DESCENDANTS); 결과기존에 가공된 값을 설정하며, 디자인을 조금 더 가공한 결과아래와 같은 결과물을 얻을 수 있게 되었습니다! 그림 출처 NumberPicker 휠스크롤 모양으로 바꾸기 https://atstechlab.wordpress.com/2010/07/15/android-numberpicker-widget-part-1/]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Java</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Swift 문법 : (3) 특수문자 표시와 의미 (Special Characters In Swift)]]></title>
    <url>%2Fposts%2F2019%2F06%2F07%2FSpecial-Characters-In-Swift%2F</url>
    <content type="text"><![CDATA[용도에 대한 자세한 설명을 작성할 예정입니다. Swift 문법특수 문자표한글 두벌식 (또는 영문 QWERTY) 기준으로 좌측에서 우측 순으로, 위에서 아래 순입니다.주로 많이 사용하거나 중요한 것은 두꺼운 글씨로 표기했습니다 특수문자(기호) 우리말 (한글 표현) 영어 뜻, 의미, 용도 ` Grave Accent / Back Tick 키워드를 식별자로 변환 ~ 물결 / 물결 표시 Tilde 비트 연산 ! 느낌표 Exclamation Mark 논리 부정 / 저장된 값을 강제로 가져올 때 (Optional) 용도로 사용 @ 골뱅이 At symbol 코드 자체의 특성을 가리킬 때 사용 # 우물 정 / 샵 / 해쉬태그 Sharp / Pound / Hash Tag Swift 고유의 특별한 명령어들의 첫 문자 $ 달러 Dollar Sign Closure에서 파라미터(인자, Parameter) 이름을 대체할 때 사용 % 퍼센트 / 백분율 Percent Sign 나머지 연산 ^ 위로 꺾은 기호 / 꺽쇠 Caret 비트 연산 &amp; 앤드 기호 Ampersand 메모리 주소를 얻거나 참조 * 별 Asterisk 곱셈 연산 ( ) 소괄호 Parentheses 함수 호출 / 계산의 순서를 지정 - 뺄셈 기호 / 마이너스 Minus Sign / Hyphen 뺄셈 연산 / 음수 지정 + 덧셈 기호 / 플러스 Plus Sign 덧셈 연산 _ 밑줄 Minus Sign / Underscore Wild Card 패턴 활용 = 등호 / 이퀄 / 은,는 기호 Equal Sign 값을 저장 / *(두개를 연달아 사용시 ‘==’, 값을 비교) { } 중괄호 Curly Bracket / Brace 코드 블록의 범위를 지정 | 수직 기호 / 파이프 Vertical Bar / Pipe 옵션 열거시 사용(기존 Swift) / 논리 연산 또는 비트 연산 [ ] 대괄호 Square Bracket 주로 Collection에 저장된 값을 접근할 때 / Subscript 문법 활용 \ 오른쪽 내려가는 대각선 / 역슬래쉬 Backslash String Interpolation / Keypress 표현 : 콜론 Colon 자료형 지정 / Dictionary에서 키와 값을 구분 ; 세미콜론 Semicolon 문장의 끝을 표현 / 한 줄에 여러 식이나 문장을 입력 &lt; &gt; 화살 괄호 Angle Bracket 크기를 비교 / Generic에서는 형식 파라미터를 지정 ? 물음표 Question Mark Optional 사용 , 쉼표 / 콤마 Comma 함수를 전달하는 값을 나열 / 배열에 저장할 값을 나열 . 온점 / 점 Period 메서드를 호출하거나 속성에 접근 / 오른쪽 올라가는 대각선, 사선 / 슬래쉬 Slash 주로 경로를 지정]]></content>
      <categories>
        <category>Programming</category>
        <category>Language</category>
        <category>Swift</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Language</tag>
        <tag>Swift</tag>
        <tag>Grammar</tag>
        <tag>Special Character</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Swift 프로세스 : 컴파일, 링크, 실행 (Compile, Link, Run In Swift)]]></title>
    <url>%2Fposts%2F2019%2F06%2F07%2FCompile-Link-Run-In-Swift%2F</url>
    <content type="text"><![CDATA[Swift 구조컴파일 (Compile)사람이 이해할 수 있는 문자를 사용하며 코드를 작성하고, 이 문자들을 컴퓨터 컴파일러를 통해서, 컴퓨터가 알아볼 수 있고 0과 1로 구성되어 있는 이진수 코드로 변환하는 과정을 의미합니다. codes ⇒ 0101… 링크 (Link)컴파일 과정을 통해 얻은, 이진수로 구성되어 있는 컴파일 코드를 실행 가능한 파일(바이너리)로 변환하기 위하여, 프레임워크와 라이브러리 등을 접목시켜 변환하는 작업을 의미합니다. codes ⇒ 0101... + Framework (+ Libraries ... ) ⇒ Variables, Components ... 과거 일일히 처리하는 도구가 있어야하지만, 오늘날 IDE(Integrated Development Environments, 통합 개발 환경) 도구가 모두 처리해줍니다. 빌드 (Build)Compile 과정과 Link 과정을 아우르는 과정은 ‘Build’ 라고 합니다. 실행 (Run)build 과정을 거친 이후, 개발자가 작성한 코드는 실행이 가능한 상태인 파일들로 변환됩니다. 이 때, 원하는 상태(Mode) 를 통해, 각기 다른 결과를 도출할 수도 있는데 크게 두 가지 상태로 나뉘어집니다. Debug Mode : 앱을 만들 때 사용하며, 사용자가 볼 수 없지만 개발자들이 확인 가능한 값들도 출력이 됩니다. Release Mode : 각 다른 실행 기기에 최적화된 상태로 변환되며, Debug Mode 와는 달리 실행 속도가 빠릅니다. 시간과 시점컴파일 시간 (Compile Time)Compile와 Link 시작시간에서, 과정을 모두 마칠 때까지 걸린 시간을 의미합니다. 런타임 (실행시점, Runtime)실행한 시점을 가리킵니다.]]></content>
      <categories>
        <category>Programming</category>
        <category>Language</category>
        <category>Swift</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Language</tag>
        <tag>Swift</tag>
        <tag>Process</tag>
        <tag>Compile</tag>
        <tag>Link</tag>
        <tag>Run</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Swift 문법 : (2) 리터럴, 식별자, 키워드 (Literals, Identifiers, Keywords In Swift)]]></title>
    <url>%2Fposts%2F2019%2F06%2F07%2FLiterals-Identifiers-Keywords-In-Swift%2F</url>
    <content type="text"><![CDATA[Swift 문법리터럴 (Literals) 숫자 자체를 의미합니다. 그러나 상수 또는 변수에 붙어있는 숫자가 아닙니다. Integer, Floating-point, Boolean 등의 자료형으로 구성되어 있습니다.12345let x = 3 // 3이 Literal 입니다.let y = 1 + 2 // 1, 2가 Literal 입니다.let x2 = x &gt; 3 // x2는 Literal 이 아니며, 3만 Literal 입니다. 식별자 (Identifiers) 코드에 포함한 요소를 구별하는 데에 사용합니다. 특정한 변수 또는 상수를 지칭할 때 사용합니다.123456let x = 7 // x가 식별자입니다// number 와 Number, _Number는 각각 다른 상수입니다.let number = 1let Number = 1let _Number = 1 키워드 (Keywords) 변수나 상수 또는 다른 요소를 구성하거나 선언할 때 사용하는 예약된 문자입니다. class, enum, init, for, if 등이 있습니다. 이 것들은 예약어 (Reserved words/keywords) 라고 합니다12345let x = 2 // let은 키워드로 상수를 의미합니다.var x = 3 // x는 변수를 의미합니다.//let let = 0 // 컴파일 오류가 발생합니다. 'let'은 상수로 사용할 수 없습니다let letNumber = 0 // 단, 단어 사이에 포함된 키워드는 사용이 가능합니다.]]></content>
      <categories>
        <category>Programming</category>
        <category>Language</category>
        <category>Swift</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Language</tag>
        <tag>Swift</tag>
        <tag>Grammar</tag>
        <tag>Literal</tag>
        <tag>Identifier</tag>
        <tag>Keyword</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Swift 문법 : (1) 토큰, 표현식, 문장 (Tokens, Expressions, Statements In Swift)]]></title>
    <url>%2Fposts%2F2019%2F06%2F07%2FTokens-Expressions-Statements-In-Swift%2F</url>
    <content type="text"><![CDATA[Swift 문법토큰 (Tokens) 언어를 구성하는 요소들 중 가장 작은 단위. 문법적으로 더 이상 나눌 수 없는 단위 종류 식별자, 키워드, 구두점, 연산자, 리터럴 (Identifiers, Keywords, Punctuations, Operators, Literals) 122+3; // 토큰은 4개 (2, +, 3, ;)2 + 3 ; // 토큰은 7개 (2, , +, , 3, , ;) 표현식 (Expressions) 값, 연산자, 함수들을 하나로 모여 표현하는 식, 코드를 평가했을 때 결과 값이 나오는 식. 하나 이상의 토큰이 모여서 하나 이상의 값을 도출하는 것 산술 표현식 (Arithmetic Expressions) 12let x = 7x + 1 = 8 논리 표현식 (Boolean Expressions) 1x &lt; 10 문장/구문/~문 (Statements) 하나 이상의 표현식이 모이면 특정 작업을 실행하는 코드123let str = "Swift"print(str)// Objective-C 와는 달리 ; 빼도 실행 가능]]></content>
      <categories>
        <category>Programming</category>
        <category>Language</category>
        <category>Swift</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Language</tag>
        <tag>Swift</tag>
        <tag>Grammar</tag>
        <tag>Token</tag>
        <tag>Expression</tag>
        <tag>Statement</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Data Binding 작업 후, 'Found data binding errors. msg:Identifiers must have user defined types from the XML file.' 발생시]]></title>
    <url>%2Fposts%2F2019%2F06%2F07%2FAndroid-Found-data-binding-Errors%2F</url>
    <content type="text"><![CDATA[Data binding error 발생XML Layout 파일에서 Data binding을 사용하는 분들이 많습니다. 저를 비롯해서..저는 사진 촬영 버튼을 누르면 저장 할 것인지 다시 촬영할 것인지, 미리보기 화면을 제공하는 기능을 구현하고 있었습니다. 123456789101112131415161718192021&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;layout&gt; &lt;data&gt; &lt;import type="android.view.View" /&gt; &lt;variable name="activity" type="project.wgtech.sample.view.CameraActivity" /&gt; &lt;variable name="previewMode" type="java.lang.Boolean" /&gt; &lt;/data&gt; &lt;!-- 생략 --&gt; &lt;androidx.appcompat.widget.AppCompatImageButton .. 생략 .. android:onClick="@&#123;activity::clickCapture&#125;" android:visibility="@&#123;previewMode ? View.VISIBLE : View.GONE&#125;" /&gt; &lt;!-- 생략 --&gt;&lt;/layout&gt; 위와 같이 Data binding 을 수행하고 build를 시도해보니…. ****/ data binding error****msg:Identifiers must have user defined types from the XML file.View is missing it file: … ****\ data binding error 라는 오류가 발생되면서 build에 실패합니다…. 왜 발생할까요?View is missing it 이라고 합니다.XML 파일에서 해당 View를 정의하지 않아 생긴 오류라고는 하는데, 1234567&lt;!-- 생략 --&gt;&lt;androidx.appcompat.widget.AppCompatImageButton .. 생략 .. android:onClick="@&#123;activity::clickCapture&#125;" android:visibility="@&#123;previewMode ? View.VISIBLE : View.GONE&#125;" /&gt;&lt;!-- 생략 --&gt; android:visibility 에서 View 클래스를 사용하고 있더라구요.도대체 어디서 저 View 를 정의하면 되는 것인가~ 했더니! import하면 되는 것이었습니다. 해결 방법따라서 태그에서 View 클래스를 import 하면 됩니다. 1234&lt;data&gt; &lt;import type="android.view.View" /&gt;&lt;/data&gt; 위와 같은 형식으로 &lt;data&gt; 태그안에 &lt;import&gt; 태그를 정의하고, 123456789101112131415161718192021&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;layout&gt; &lt;data&gt; &lt;import type="android.view.View" /&gt; &lt;variable name="activity" type="project.wgtech.sample.view.CameraActivity" /&gt; &lt;variable name="previewMode" type="java.lang.Boolean" /&gt; &lt;/data&gt; &lt;!-- 생략 --&gt; &lt;androidx.appcompat.widget.AppCompatImageButton .. 생략 .. android:onClick="@&#123;activity::clickCapture&#125;" android:visibility="@&#123;previewMode ? View.VISIBLE : View.GONE&#125;" /&gt; &lt;!-- 생략 --&gt;&lt;/layout&gt; 로써, 미리보기 화면을 한 화면에서 조정할 수 있게 되었습니다!]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Data Binding</tag>
        <tag>Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[APAC AWSomeDay Online Seminar 2019 : 모듈5. AWS 요금 및 지원]]></title>
    <url>%2Fposts%2F2019%2F05%2F30%2FAPAC-AWSomeDay-Online-Seminar-2019-Module5%2F</url>
    <content type="text"><![CDATA[요금 기본 정보지불 조건트래픽 사용량에 따른 비용 지불 사용하는 서비스에 대한 비용만 지불, 대규모 선결제 금액이 없습니다. 예약하는 경우 지불 비용 감소 전체 선결제 : AURI (All Upfront) 부분 선결제 : PRUI (Partial Upfront) 선결제 없음 : NURI (No Upfront) 더 많이 사용할 수록 단위당 더 적은 비용 지불 대량 구매 할인 실현 AWS 규모가 커짐에 따라 더 적은 비용 지불사용자 지정 요금 고유한 요구사항 있는 대용량 프로젝트에 따라 요금 선택 가능 AWS 프리티어 (최대 1년, 특정 서비스와 옵션 제한) 추가 요금 없는 AWS 서비스 Amazon VPC AWS Elastic Beanstalk AWS CloudFormation AWS IAM Auto Scaling AWS OpsWorks AWS 지불 내역AWS 기초 특성에 대한 비용 지불 컴퓨팅 스토리지 아웃바운드 데이터 전송 (Amazon EC2, S3 등에서) 무료 인바운드 데이터 전송 동일 리전 내 서비스간 데이터 전송 AWS 서비스와 가격Amazon EC2 Clock-초/시간당 청구 리소스가 실행되고 있을때만 요금 청구 인스턴스 구성 인스턴스의 물리적 용량 AWS 리전, OS, 코어 수, 메모리에 따라 요금이 변동됨. Amazon S3 요청 수 / 유형 (GET 요청에 대한 요율이 다름) 스토리지 데이터 전송 Amazon EBS EBS 볼륨은 인스턴스와 별개로 유지 클라우드 가상 디스크와 유사 볼륨 유형에 따라 다르게 요금 제공 프로비저닝되는 용량에 따라 요금이 부과 범용 SSD, 프로비저닝된 IOPS(SSD), 마그네틱 스냅샷 : 저장된 데이터의 월별 GB당 추가. 데이터 전송 : 인바운드 데이터 전송은 무료이며, 아웃바운드 데이터 전송은 계층화. Amazon RDS DB 구매 유형 온디맨드 데이터베이스 인스턴스 : 시간당 예약 데이터베이스 인스턴스 : 선결제 금액 다수의 DB 인스턴스 피크로드를 처리하도록 다수의 DB 인스턴스를 프로비저닝 할 때 배포 유형 단일 가용 영역 또는, 다중 가용 영역 AWS 에서 제공되는 유틸리티AWS TCO 계산기https://awstcocalculator.com 비용 절감 효과 추정 세부 보고서 제공 시뮬레이션 AWS Support 플랜 도구와 전문성의 고유한 조합 제공 선제적 지침 : Technical Assistance Management (TAM) 모범 사례 : Trusted Advisor 계정 지원 : AWS Support 컨시어지 4가지의 특정 플랜 존재 Basic Support Plan 고객 서비스 설명서 지원 및 포럼 연중무휴 24시간 Personal Health Dashboard 액세스 지원 Developer Support Plan AWS 초기 개발 및 테스트 고객을 위한 리소스 지침 및 기술지원 AWS 신속 업무 비 Production Work 등에 대한 지원 Business Support Plan 여러 서비스 활성화 되어 있거나 주요 서비스를 폭넓게 사용 확장성 및 보안성에 중요한 리소스 제공 Enterprise Support Plan AWS에서 Mission Critical Work plan 등을 원하는 고객 모범사례에 따른 Work-Load 구축 기타 서비스로부터 Migration 수행을 원하는 고객사 채팅창 꿀팁 일단 온디멘드로 시작하다가 장기로 가면 예약 인스턴스로 넘어가면 되는거 같아요. RDS 가 비용안 비싸고 디비 데이터 보호에 아주 좋다고 하더라고요. rds 쓰는게 HA 까지 하다보면 더 나을꺼 같아요 보안 백업 등등의 관리를 모두 할수있다 라면 ec2에 r5.large라 그리 크지않은거 쓰고 있는데 제법나오요 (reader writer구성 ) 뭐 안되거나 잘못됏을때 무조건 연락해서 지원받아야됩니다.]]></content>
      <categories>
        <category>Seminar</category>
        <category>Amazon Web Services</category>
        <category>AWSomeDay</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Amazon Web Services</tag>
        <tag>AWS</tag>
        <tag>AWSomeDay</tag>
        <tag>Environment</tag>
        <tag>Cloud</tag>
        <tag>Cloud Services</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[APAC AWSomeDay Online Seminar 2019 : 모듈4. AWS 아키텍쳐 설계]]></title>
    <url>%2Fposts%2F2019%2F05%2F30%2FAPAC-AWSomeDay-Online-Seminar-2019-Module4%2F</url>
    <content type="text"><![CDATA[AWS Well-Architected Framework 아키텍처를 평가하고 개선 설계 의사 결정이 비즈니스 AWS Well-Architected Framework 5가지 원칙보안 Identity and Access Management (IAM) 탐지 제어 인프라 보호 데이터 보호 인시던트 대응 안정성 문제/장애로부터 복구 기반, 변경 관리 및 장애 관리 모범 사례 적용 장애 예측, 대응 및 방지 안정성 원칙 설계 원칙 복구 절차 테스트 자동 복구 수평 확장 용량 추정 불필요 자동화 변경 사항 관리 성능 효율성성능 효율성 원칙 선택 : 사용자 지정 가능한 솔루션 선택, 보유 워크아웃에 따라 다름. 검토 : 지속적 혁신을 위한 검토 모니터링 : AWS 서비스 모니터링 절충 : AWS 서비스 절충 고려 성능 효율성 원칙 : 설계 원칙 고급 기술을 대중화 몇 분 만에 전 세계에 배포 Serverless Architecture 사용 실험 빈도 증가 기술적 동조 적용 비용 최적화비용 최적화 원칙 비용 효율적인 리소스 사용 수요에 맞춰 공급 지출에 대한 인식 고취 시간을 두고 최적화 비용 최적화 원칙 : 설계 원칙 소비 모델 채택 전반적인 효율성 측정 데이터 센터 운영에 지출하는 비용 절감 또는 중단 지출 속성 파악 및 분석 관리형 서비스 사용 운영 우수성참조 아키텍쳐 : 1. 내결함성 시스템이 작동 가능 상태를 유지 할 수 있는 능력 애플리케이션 구성요소의 내장된 중복성 참조 아키텍쳐 : 2. 고가용성 시스템이 일반적으로 작동하고 액세스 가능 상태 유지 가동 중단을 최소화 필요한 인적 개입을 최소화 사전 비용 투자를 최소화 고가용성 온프레미스와 AWS 비교기존 (온프레미스) 높은 비용 미션 크리티컬 애플리케이션만 해당 AWS 다수의 서버 가용 영역 리전 내결함성 서비스 탄력적 로드 밸런서 : ELB 수신 트래픽(로드) 분산 Amazon CloudWatch로 지표 전송 트리거/알림 긴 지연 시간 또는 과도한 사용 탄력적 IP 주소 동적 클라우드 컴퓨팅을 위한 고정 IP 주소 장애가 발생하는 경우, 장애를 마스킹 인스턴스에 장애가 발생해도 애플리케이션에 계속 액세스합니다. Amazon Route 53 신뢰할 수 있는 DNS 단순 라우팅, 지연시간 기반 라우팅, 상태 확인, DNS 장애 조치, 지리 위치 라우팅 Amazon CloudWatch 사용 지표를 설정하여, 임계 시간 이상을 사용하거나 임계치 이상을 설정시 자동으로 알림 기타 내결함성 도구 Amazon Simple Queue Service (Amazon SQS) Amazon Simple Storage Service (S3) Amazon SimpleDB Amazon Relational Database Service 참조 아키텍처 - 웹 호스팅AWS에서 웹 호스팅 빠름 간단함 저렴한비용 일반적인 웹 애플리케이션 기업 웹 사이트 콘텐츠 관리 시스템 소셜 미디어 애플리케이션 개발 사내 SharePoint 사이트 채팅창 꿀팁 예전에 기회가 되서 서버 1개를 그냥 오픈해서 열어둔적이 있었는데.. 1달만에 서버 초토화됬음.. 별별..이상한게 엄청 깔려서.. 회사내 프로젝트관리가 체계적이지 않음 보안에 구멍이 뚫리기 쉽더군요 .. AWS 를 통해 VPC를 설정하면 기본적으로 N-ACL 설정이 동반되게 됩니다 좀더 어플리케이션 단 얘기긴하지만 웹서버인 경우 WAF를 쓰면 DDOS가 있더라도 어느정도는 막아주는거 같더라구요. 물론 발생된 트래픽은 과금되지만. AWS Shield Advanced를 활용하면 DDos 트래픽에 대한 비용 보호 제도가 있다고 합니다 https://aws.amazon.com/ko/shield/pricing/]]></content>
      <categories>
        <category>Seminar</category>
        <category>Amazon Web Services</category>
        <category>AWSomeDay</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Amazon Web Services</tag>
        <tag>AWS</tag>
        <tag>AWSomeDay</tag>
        <tag>Environment</tag>
        <tag>Cloud</tag>
        <tag>Cloud Services</tag>
        <tag>Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[APAC AWSomeDay Online Seminar 2019 : 모듈3. AWS 보안]]></title>
    <url>%2Fposts%2F2019%2F05%2F30%2FAPAC-AWSomeDay-Online-Seminar-2019-Module3%2F</url>
    <content type="text"><![CDATA[AWS 보안 소개 암호화 기능 키 관리 옵션 : AWS Key Management Service 하드웨어 기반 암호화 키 스토리지 옵션 : AWS CloudHSM 액세스 제어 및 관리 Identity and Access Management (IAM) Multi-factor authentication MFA 기업 디렉터리와 통합 및 연동 Amazon Cognito 서비스 AWS SSO 클라우드에서의 보안AWS Service Catalog 공통 IT 서비스를 중앙에서 관리 일관된 거버넌스 구현 규정 준수 요건 충족 승인된 IT 서비스를 신속하게 배포 요약 AWS와 고객은 보안 책임을 공유 고객은 보안 조치에 대해 완전한 제어권 보유 고객은 AWS Service Catalog 를 사용할 수 있음 ‘인프라’ 서비스 AWS Identity and Access Management (IAM) 사용자와 그룹을 생성 권한과 역할을 부여 기능 사용자와 액세스 권한을 관리 역할과 그 권한을 관리 연동 사용자와 해당 권한을 관리 모범 사례 AWS 루트 계정 액세스 키 삭제 Multi-Factor Authentication (MFA) 활성화 IAM 사용자에게 꼭 필요한 권한만 부여 IAM 그룹 사용 IAM 암호 정책을 적용 역할 애플리케이션에 대해 역할을 사용 자격 증명을 공유하는 방법 보다는 역할을 직접 사용 자격 증명을 주기적으로 교체, 불필요한 사용자와 자격 증명을 제거 보안 강화를 위해 정책 조건 사용 AWS 계정 활동 모니터링 AWS 보안 및 규정 준수 프로그램 AWS 와 고객이 IT 환경에 대한 제어권을 공유 채팅창 꿀팁 클라우드 써보시려면 구글 추천합니다. AWS 는 비용이 지출될 수 있는데, 구글 300 달러안에서 다 할 수 있어서 입문용으로 좋아요. https://blog.naver.com/gksxoehd5 http://www.yes24.com/Product/Goods/69304366?scode=032&amp;OzSrank=1 저는 개발자라서, 코드커밋하고 엘라스틱 아이피랑 EC2, RDS, R3 정도 쓰고 있어요 소소하게 유료결제 하면서요 요즘 구직 사이트보면 AWS GCP 작업한다고 사람 뽑는 것 여럿 있더라구요. https://aws.amazon.com/ko/certification/]]></content>
      <categories>
        <category>Seminar</category>
        <category>Amazon Web Services</category>
        <category>AWSomeDay</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Amazon Web Services</tag>
        <tag>AWS</tag>
        <tag>AWSomeDay</tag>
        <tag>Environment</tag>
        <tag>Cloud</tag>
        <tag>Cloud Services</tag>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[APAC AWSomeDay Online Seminar 2019 : 모듈2. AWS 핵심 서비스]]></title>
    <url>%2Fposts%2F2019%2F05%2F30%2FAPAC-AWSomeDay-Online-Seminar-2019-Module2%2F</url>
    <content type="text"><![CDATA[AWS 핵심 서비스를 이해하기 위한 주요 키워드리전 Americas Europe / Middle East / Africa Asia / Pacific 가용 영역 장애로부터 영역을 보호 고가용성을 제공하도록 설계됨 다른 영역을 통해 요청을 처리 엣지 로케이션 Amazon CloudFront Amazon Route 53 AWS Shield AWS Web Application Firewall Lambda@Edge 컴퓨팅 AWS 보안 가상 방화벽 제공 규칙을 통해 인스턴스에 대한 액세스를 제어 AWS Management Console을 통해 관리 (웹 티어, 애플리케이션 티어, 데이터베이스 티어 그룹별로 설정 가능) AWS 컴퓨팅 서비스의 종류AWS 유연성 비용 효율적 Amazon EC2 : 유연한 구성 및 제어 탄력적인 컴퓨팅 클라우드 사용한만큼 지불 폭넓은 HW/SW 선택 가능 전세계에서 호스팅 그 외 다수 AWS Lambda 사용한 만큼만 비용 지불, 관리 불필요 Amazon Lightsail 가상 프라이빗 서버 시작, 간편한 웹 및 애플리케이션 서버 관리 Amazon ECS 관리형 컨테이너, 뛰어난 확장성, 뛰어난 성능 AWS Fargate 클러스터를 직접 관리나 상호작용 할 필요 없어 컨테이너를 관리하는 기술 Amazon EKS 자체 Kubernetes 클러스터 운용 필요 없이 클러스터를 관리하는 기술 Amazon Elastic Block Service특징 EC2 인스턴스를 위한 사용자 지정 가능한 영구 블록 스토리지 HDD 및 SSD 유형 동일한 가용 영역에 복제됨 백업용 스냅샷 쉽고 투명한 암호화 가용성 내구성이 있으며 자동으로 복제됨 드라이브 유형 마그네틱 또는 SSD, 요구사항에 가장 적합한 스토리지 스냅샷 특정 시점 스냅샷 생성, 언제든지 새로운 볼륨 다시 생성 암호화 추가 비용 없이 암호화된 EBS 볼륨 생성 가능 탄력성 용량 증가, 다른 유형으로 변경 Amazon S3특징 완전관리형 클라우드 스토리지 서비스 풍부한 보안 제어 항목 기능 객체를 사실상 무제한으로 저장 언제 어디든 액세스 Amazon RDS특징 뛰어난 확장성 고성능 관리 용이성 가용성 및 내구성 보안 및 규정 준수 사용사례 웹 및 모바일 애플리케이션 (높은 처리량, 탁월한 스토리지 확장성, 고가용성) 중소기업 전자상거래 애플리케이션 (저렴한 데이터베이스, 데이터 보안, 완전관리형 솔루션) 모바일 및 온라인 게임 (빠르게 증가하는 용량, 자동 조정, 데이터베이스 모니터링) 1:1 QnA AMI 인스턴스 세부정보 구성에서 ‘스팟 인스턴스 요청’은 무슨 의미인가요? 스팟 인스턴스라는 요금 옵션이 따로 있습니다. 최대 90%까지 저렴하게 인스턴스를 사용할 수 있지만 경우에 따라 인스턴스를 회수 당할 수도 있다는 예외 상황이 있습다. 자세한 내용은 링크를 참조 부탁드립니다. https://aws.amazon.com/ko/ec2/spot/ 채팅창 꿀팁 웹서버면서 최소비용 유지하실거면 t2.small도 괜찮구요 못버티면 m4.large 나 m5.large추천드려요. 다른 프로젝트에서 c4.large, c5.large쓰는 곳도 있었는데 m타입 괜춘해요 t2보다 t3가 가성비가 좋은것 같던데여 m타입이 비용적인 부분으로 많이 부담스러우시면 현재 t2에서 t3로바꾸시는것도 추천드려요 t3는 t2 상위버전인데 비용적인 부분으로 더 저렴하게 나왔고 cpu를 평소에는 cpu를 적게 사용하다가 이벤트 같은거 하실때 사용량을 순간 확장기능이있어서 실용성으로는 좋다고 봐요 ㅎㅎ 라이트세일과 ec2 동일 최저사양으로 요금비교하면 많이 차이나나요? 기능적으로 오는 비용은 배제하구요 시스템이 크리티컬 하지 않으면 20 % 에 로드 밸런싱 거시는게 더 좋지 않을 까요?? EC2 사용시간으로 과금되기때문에 오토스케일링에 대한 별도 과금은 없습니다. 항상 조심하세요 s3 퍼블릭으로 해서 보안문제가 발생한 경우가 많아서 ec2나 라이트세일에 db 커스텀으로 설치해서 사용하는게 저렴한가요. 아니면 rds를 따로 사용하는게 저렴한가요?→ 로그량에 따라 S3 사용하는 것도 괜찮다. RDS 페일오버 괜찮아졌어요 .초창기엔 페일오버 하는데 시간이 걸려서 서비스가 간헐적으로 끊겨서 에러 나곤 했었어요 로그같이 지속적으로 쌓이는 데이터의 경우 데이터가 많아지면 비용이 증가하기 때문에 그런 경우 S3 에 저장하기도 합니다.]]></content>
      <categories>
        <category>Seminar</category>
        <category>Amazon Web Services</category>
        <category>AWSomeDay</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Amazon Web Services</tag>
        <tag>AWS</tag>
        <tag>AWSomeDay</tag>
        <tag>Environment</tag>
        <tag>Cloud</tag>
        <tag>Cloud Services</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[APAC AWSomeDay Online Seminar 2019 : 모듈1. AWS 클라우드 개념]]></title>
    <url>%2Fposts%2F2019%2F05%2F30%2FAPAC-AWSomeDay-Online-Seminar-2019-Module1%2F</url>
    <content type="text"><![CDATA[클라우드란? 인터넷을 통해 IT 리소스와 애플리케이션을 온디맨드로 제공되는 서비스 민첩성에 대한 3가지 요소 속도, 실험, 변화 민첩성 증진을 위한 필요 사항 속도와 글로벌 접근성 향상 실험 증가 코드로서의 운영 안전한 실험 서로 다른 구성을 사용해 테스트 AWS CloudFormation 을 사용한 템플릿화된 환경 혁신 향상 낮은 비용/위험의 신속한 실험 더 많은 실험을 더 자주 수행 AWS 인프라 컴퓨팅 리소스의 탄력성, 확장성 및 안정성 리전 가용 영역]]></content>
      <categories>
        <category>Seminar</category>
        <category>Amazon Web Services</category>
        <category>AWSomeDay</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Amazon Web Services</tag>
        <tag>AWS</tag>
        <tag>AWSomeDay</tag>
        <tag>Environment</tag>
        <tag>Cloud</tag>
        <tag>Cloud Services</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS로 CPU용 Tensorflow 직접 빌드해보기]]></title>
    <url>%2Fposts%2F2019%2F05%2F29%2FLets-Build-Tensorflow-CPU-With-Your-Mac%2F</url>
    <content type="text"><![CDATA[Tensorflow 나도 해보자저는 몇년전부터 주변에서 다들 텐서플로우 텐서플로우..하길래 궁금했고, Google I/O 세미나를 통해 접했습니다.제대로 접해보는 기회가 딱히 없었고, 그 땐 머신 러닝이나 딥러닝에 크게 관심은 없었습니다.그러다가, 최근에 장기간 교육을 받았는데 그 교육을 통해서 Tensorflow 에 대해 제대로 접해보기도 했었습니다.그리고 그 교육을 통해서 Notebook 프로젝트도 완성했구요. ‘CPU’로 Tensorflow 돌리고 싶어요머신러닝 라이브러리 돌릴 땐 GPU가 최고라고 하네요.왜냐하면, CPU보다 GPU가 코어 수가 많아, 많은 연산을 병렬로 동시에 할 수 있기 때문이죠.즉, 연산을 생각할 때 가성비(?)가 CPU 보다 크기 때문입니다. 그러나 저는 Macbook Pro 씁니다. 심지어 2015년 하반기 버전이죠..이 맥북은 ThunderBolt 2 방식만 지원되서, 심지어 외장 그래픽카드 성능을 100% 다 뽑을 수도 없습니다. 그래서 ‘Mac의 CPU’로 Tensorflow 돌릴겁니다.. 그런데 너무 느린데요일단 CPU보다 GPU가 훨씬 빠른 건 사실입니다… :( GPU가 없어요. GPU 비싸요.모델 학습을 시키는데, 1... I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA 위와 같은 메시지가 뜨더군요. 이 메시지는 현재 설치된 Tensorflow 패키지는, CPU의 연산을 다 사용하여 더 좋은 연산 아키텍쳐에 대응하도록 빌드되지 않았다는 것입니다. 그러니까 pip로 설치하면, 호환성 또는 범용성이라는 명목하에 CPU 성능을 제대로 뽑아주지 못한다는 거죠. 사용하는 CPU에 최적화된 Tensorflow 패키지를 빌드하기자 이제, Mac CPU 성능을 끌어올려, 기존 Tensorflow CPU 모드보다 더 빠른 성능을 얻도록 해봅시다. 다운로드brew를 설치해주세요.1/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" bazel를 설치해주세요.1brew install bazel Tensorflow git repo를 받으세요.1git clone https://github.com/tensorflow/tensorflow.git 설치./configure 명령어를 입력해주세요12cd tensorflow./configure 새로 빌드할 pip 패키지 옵션 선택하기 필요한 설정에 따라 Y 체크하시거나, 계속 엔터키를 누르면 됩니다. 1) 설치 시작 메시지 12WARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command "bazel shutdown".You have bazel 0.23.2-homebrew installed. 2) bazel로 패키지를 만들기 위한 옵션 지정하기 설치된 Python 가상환경이 기본 PATH로 지정되어 있다면 아래와 비슷한 메시지가 나옵니다. 1Please specify the location of python. [Default is /Users/wgtech/anaconda3/envs/mlvenv/bin/python]: 설치된 Python library 경로를 묻습니다. 이상 없으면 엔터키를 눌러주세요 123Found possible Python library paths:/Users/wgtech/anaconda3/envs/mlvenv/lib/python3.6/site-packagesPlease input the desired Python library path to use. Default is [/Users/wgtech/anaconda3/envs/mlvenv/lib/python3.6/site-packages] 3) pip 패키지로 빌드하기 위한, 알맞는 옵션을 선택합니다. XLA JIT 옵션 선택입니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Do you wish to build TensorFlow with XLA JIT support? [y/N]:No XLA JIT support will be enabled for TensorFlow. OpenCL SYCL 옵션 선택입니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]:No OpenCL SYCL support will be enabled for TensorFlow. ROCm 옵션 선택입니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Do you wish to build TensorFlow with ROCm support? [y/N]:No ROCm support will be enabled for TensorFlow. CUDA 옵션 선택입니다. (CPU로 개발할 것이기 때문에 N/또는 엔터키를 입력하여 넘겼습니다.) 12Do you wish to build TensorFlow with CUDA support? [y/N]:No CUDA support will be enabled for TensorFlow. 새로운 버전의 clang을 설치할 지 묻습니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Do you wish to download a fresh release of clang? (Experimental) [y/N]:Clang will not be downloaded. MPI 옵션 선택입니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Do you wish to build TensorFlow with MPI support? [y/N]:No MPI support will be enabled for TensorFlow. 추후 bazel 명령어를 통해 입력할 config 파라미터를 정할 수 있습니다. (제 경우는 엔터키를 입력하여 넘겼습니다.) 1Please specify optimization flags to use during compilation when bazel option "--config=opt" is specified [Default is -march=native -Wno-sign-compare]: Android용 Tensorflow 애플리케이션을 만들지 묻습니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Would you like to interactively configure ./WORKSPACE for Android builds? [y/N]:Not configuring the WORKSPACE for Android builds. iOS, macOS, tvOS용 Tensorflow 애플리케이션을 만들지 묻습니다. (제 경우는 N/또는 엔터키를 입력하여 넘겼습니다.) 12Would you like to configure Bazel rules for building on Apple platforms? [y/N]:Not configuring Bazel rules for Apple platforms. bazel로 패키지를 빌드하기 선택 1 : CPU 자원을 제대로 활용하여 Tensorflow 사용하고 싶다면… 저는 아래와 같은 명령어를 입력하여 패키지 빌드했습니다 1bazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse4.2 //tensorflow/tools/pip_package:build_pip_package 선택 2 : pip에 배포된 패키지와 동일하게 진행할 것이라면…bazel build –config=opt //tensorflow/tools/pip_package:build_pip_package 선택 3 : GPU로 Tensorflow를 사용하고 싶다면…(위에 반드시 CUDA 옵션 선택 메시지에서 Y를 눌러야합니다. 그리고 아래와 같은 명령어를 입력하세요.)bazel build –config=opt –config=cuda //tensorflow/tools/pip_package:build_pip_package 위 선택지 중 하나를 택해 build 과정을 거치고 나서 아래 명령어를 입력해주세요.(wheel 파일 이름을 입력하라고 나올겁니다) 1./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg bazel로 패키지 빌드시 유의할 점 –copt부분은 cpu가 지원되는 것에 따라 약간씩 다를 수 있습니다. 위에서도 언급했지만, Nvidia GPU의 CUDA 연산을 활용하려면 –config=cuda 추가해주세요. bazel로 pip 패키지를 빌드했다면…12345# 예시1pip install /tmp/tensorflow_pkg/tensorflow-버전태그.whl# 예시2pip install /tmp/tensorflow_pkg/tensorflow-1.1.0-cp36-cp36m-macosx_10_6_intel.whl 잘못 빌드했다면!!1brew clean --expunge 결과bazel 빌드 시간위와 같은 어려움(?)을 극복하여 빌드를 시도했습니다.저 같은 경우는 약 3시간 19분정도 걸리더라구요.. 기존보다 얼마나 빨라졌을까요?정말! 놀랍게도 엄청 빨라졌습니다.프로젝트와 관련된 사항이기도 하고 시도하는 코드에 따라 정확하게 말하기는 어렵습니다만,제가 시도해보니 무려 6배가 빨라졌습니다. (1 epoch당 6시간 30분 소요 -&gt; 1시간 30분 소요)음~ 시도해볼만합니다! 그러나…역시 GPU가 좋습니다..맥북 고유의 비행기 이륙소리가 많이 들리고 발열도 장난아닙니다.어떤 걸 시도하느냐에 따라 맥북이 죽어버리는 경우도 발생합니다.. ^.^;;; 아하!CPU로도 머신러닝이 가능합니다그러나, 계속 사용하면 후회할겁니다.. 수명이 줄어들거에요..GPU 사세요.. 효율적인 머신러닝이 가능합니다옵션중에는 Android, iOS 환경에서도 사용할 지 묻는 옵션이 있었습니다.원하는 환경(컴퓨터 CPU, GPU 또는 모바일)에서 자유롭게 최대한의 퍼포먼스를 끌어올리면서 Tensorflow를 활용할 수 있다는 것입니다.]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>Framework</category>
        <category>Tensorflow</category>
      </categories>
      <tags>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Machine Learning</tag>
        <tag>Artifical Intelligence</tag>
        <tag>Tensorflow</tag>
        <tag>Python 3</tag>
        <tag>Anaconda</tag>
        <tag>pip</tag>
        <tag>Mac</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django Application 개발 방식 : MTV 패턴(MVT 패턴) 등]]></title>
    <url>%2Fposts%2F2019%2F05%2F27%2FThe-Way-Of-Django-Application-Development%2F</url>
    <content type="text"><![CDATA[Django Application 개발 방식MTV 패턴 Django 웹 개발시 대표적으로 많이 사용되는 패턴으로써, 일반적으로 웹 프로그램 개발시 언급되는 MVC 패턴과 상당히 비슷한 패턴입니다. 구성 요소 Model 데이터베이스에 저장되는 데이터 사용될 데이터에 대한 정의를 담고 있는 Django의 Class ORM 기법을 사용하여 Application 에서 사용할 데이터베이스를 Class로 Mapping Model 클래스 하나는 테이블 하나와 매핑되고, 모델 클래스 속성은 테이블의 컬럼에 매핑됩니다. 이 때, 테이블명은 밑줄과 소문자로 표시됩니다. 다른 이름으로 지정할 수 있습니다. Primary Key는 Person 클래스에서 정의하지 않아도 Django 에서 자동으로 부여합니다. 또는 직접 지정할 수 있습니다. Template 사용자에게 보여지는 UI 부분 (또는, HTML 파일 등) View 실질적으로 프로그램 로직이 동작하여 데이터를 가져오고 적절하게 처리한 결과를 Template에 전달하는 역할 프로그래밍 순서 프로젝트 뼈대 만들기 : 프로젝트 및 앱 개발에 필요한 디렉토리와 파일 생성 Model 코딩하기 : 테이블 관련 사항을 개발 (models.py, admin.py 파일) URLconf 코딩하기 : URL 및 View 매핑 관계를 정의 (urls.py 파일) Template 코딩하기 : 화면 UI 개발 (templates/ 디렉토리 하위의 *.html 파일들) View 코딩하기 : 애플리케이션 로직 개발 (views.py 파일) 프로젝트 생성 1django-admin startproject MyProject 애플리케이션 생성 1MyProject&gt; python manage.py startapp MyApp1 처리 과정 클라이언트로부터 요청을 받으면 URLconf를 이용하여 URL을 분석합니다. URL 분석 결과를 통해 해당 URL에 대한 처리를 담당할 View를 결정합니다. View는 자신의 로직을 실행하면서, 만일 데이터베이스 처리가 필 View는 자신의 로직 처리가 끝나면, Template을 사용하여 클라이언트에 전송할 HTML 파일을 생성합니다. View는 최종 결과로, HTML 파일을 클라이언트에게 보내 응답합니다. URLconf URL 정의; 직관적이고 이해하기 쉬운 URL 설계가 가능합니다. 이 방식은 Elegant(우아한) URL 이라고 합니다. 1234567from django.urls import pathfrom . import viewsurlpatterns = [ path('articles/2003/', views.special_case_2003), path('articles/&lt;int:year&gt;/&lt;int:month&gt;/&lt;slug:slug&gt;/', views.article_detail)] Django에서 URL를 분석하는 순서 settings.py 파일의 ROOT_URLCONF 항목을 읽어 최상위 URLconf (urls.py) 위치를 알아냅니다. URLconf 를 로딩하여 urlpatterns 변수에 지정되어 있는 URL 리스트를 검사합니다. urlpatterns 에 정의되어 있는 리스트를 확인하고, URL 패턴이 일치되면 검사를 종료합니다. 매치된 URL 를 통해 View 함수나 메서드를 호출합니다. 호출시 HttpRequest 객체와, 그리고 매칭할 때 추출된 단어들을 View에 인자로 넘겨줍니다. URL 리스트 끝까지 검사했는데도 매칭에 실패하면 에러를 처리하는 View를 호출합니다. (get_object_or_404() 등..) Django Path Converter str : / (슬래시)를 제외한 모든 문자열과 매치됩니다. 타입 미지정시, 디폴트. int : 0 또는 양의 정수와 매치. 이 때 Python의 int 타입과 동일. slug : ASCII, 숫자, 하이픈, 밑줄로 구성되어 있는 ‘slug’ 형식의 문자열 uuid : Python 의 UUID 타입과 동일. path : / (슬래시)를 포함한 모든 문자열과 매치되며, URL 패턴의 전체를 추출하고자할 때 많이 사용. 정규표현식 (Regular Expression) 을 사용한 Django URL Pattern 1234567from django.urls import path, re_pathfrom . import viewsurlpatterns = [ path('articles/2003/', views.special_case_2003), re_path(r'^articles/(?P&lt;year&gt;[0-9]&#123;4&#125;)/(?P&lt;month&gt;[0-9]&#123;2&#125;)/(?P&lt;slug&gt;[\\-]+)/$', views.article_detail)] 참고) 파이썬 웹 프로그래밍(한빛미디어)]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Django 3</tag>
        <tag>Library</tag>
        <tag>Refer to the book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django 웹 라이브러리 - (2) http]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FDjango-Web-Library-http%2F</url>
    <content type="text"><![CDATA[http ? HTTP 프로토콜 처리와 관련하여 urllib 모듈로는 쉽게 처리할 수 없거나, urllib 모듈을 사용하는 것보다 좀 더 세밀한 클라이언트 기능을 사용할 수 있습니다 http.client urllib.request 모듈로는 쉽게 처리할 수 없는 경우, 또는 HTTP 프로토콜 요청에 대한 저수준의 더 세밀한 기능이 필요할 때 이용됩니다. urllib.request 모듈로 작성한 로직과 동일하게 사용할 수 있는데, 이는 urllib.request 모듈이 http.client 모듈에서 제공하는 API를 사용해서 만든 모듈이기 때문입니다. GET 사용 예제 1234567891011121314151617181920from http.client import HTTPConnection# 1. 연결 객체 생성'''주의) 인자값으로 URL를 입력하는 것이 아니라, host 주소 자체를 입력해야한다.따라서, 프로토콜(http://) 입력시 오류가 발생된다.'''conn = HTTPConnection("www.python.org")# 2. 요청을 보냄conn.request("GET", "/index.html")# 3. 응답 객체 생성response = conn.getresponse()# 4. 응답 데이터를 읽음data = response.read()# 5. 연결을 닫음conn.close() POST 사용 예제 1234567891011121314151617181920212223242526272829from http.client import HTTPConnectionfrom urllib.parse import urlencode# 연결 호스트 지정host = '127.0.0.1:8000'# 요청 파라미터에 대해 URL 인코딩을 해야한다.params = urlencode(&#123; 'language':'python', 'account':'wgtech'&#125;)# POST 요청으로 보낼 헤더 정보를 삽입headers = &#123; 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'&#125;# 연결 시작conn = HTTPConnection(host)conn.request('POST', '', params, headers) # 반드시 POST로 명시해야한다.response = conn.getresponse()print(response.status, response.reason) # 200, Successdata = response.read()print(data.decode('utf-8')) # response 인스턴스를 UTF-8 인코딩으로 불러온다.# 연결 해제conn.close() HEAD 사용 예제 123456789101112131415from http.client import HTTPConnection# HTTPConnection 인스턴스 생성conn = HTTPConnection('www.example.com')# HEAD 방식임을 명시적으로 작성해야한다.conn.request('HEAD', '/')# 응답 결과 출력response = conn.getresponse()data = response.read()# 출력 결과print(len(data)) # 0print(data == b'') # True http.server http.server 모듈을 통해 간단하게 웹 서버를 구성할 수 있습니다. 웹 서버 생성 방법 1234567891011121314from http.server import HTTPServer, BaseHTTPRequestHandler# 원하는 로직에 맞게 핸들러 클래스 정의하기class MyHandler(BaseHTTPRequestHandler): def do_GET(self): # GET 일 때 self.send_response_only(200, 'OK') self.end_headers() self.wfile.write("Hello World") if __name__ == '__main__': # 초기 실행되는 코드 server = HTTPServer(('', 8888), MyHandler) print("Started WebServer on Port 8888") print("Press ^C to Quit WebServer.") server.serve_forever Tip 명령어로 Django 웹 서버 간단하게 동작하기 12345678# manage.py 가 있는 저장소 루트 (&lt;repository-root&gt;) 디렉토리에서python runserver 0.0.0.0:8888# 0.0.0.0 : 모든 주소로부터 접속이 가능하도록합니다. (127.0.0.1 이 기본값입니다)# :8888 : 포트 번호 (8000 포트가 기본값입니다)python -m http.server 8888# 0.0.0.0:8888 로 바인딩시켜 웹 서버를 생성한 것과 동일한 결과입니다. 웹 서버 구동을 위한 Python 라이브러리 주요 클래스HTTPServer 웹 서버를 만들기 위한 가장 기초적인 클래스, 서버 IP와 Port 번호를 바인딩합니다 HTTPServer 객체 생성시, 핸들러 클래스를 별도로 정의해야합니다. BaseHTTPRequestHandler 핸들러를 만들기 위한 기반 클래스로, HTTP 프로토콜 처리 로직이 들어있습니다. 이 클래스를 상속받아, 자신의 로직 처리를 담당하는 핸들러 클래스를 만듭니다. SimpleHTTPRequestHandler BaseHTTPRequestHandler 클래스를 상속받아 만든 클래스입니다. GET과 HEAD 처리가 가능한 핸들러 클래스입니다. CGIHTTPReqeustHandler SimpleHTTPRequestHandler 클래스를 상속받아 만든 클래스입니다. 추가적으로 POST 메서드와 CGI 처리가 가능한 핸들러 클래스입니다. 그 이외로 http.cookiejar 등이 있습니다. 참고) 파이썬 웹 프로그래밍(한빛미디어)]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Django 3</tag>
        <tag>Library</tag>
        <tag>Refer to the book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django 웹 라이브러리 - (1) urllib]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FDjango-Web-Library-urllib%2F</url>
    <content type="text"><![CDATA[urllib ? 웹 클라이언트를 작성하는 데 사용되는 모듈들 중에 가장 빈번하게 사용하는 모듈 HTTP 서버 뿐만 아니라, FTP 서버 및 로컬 파일 등을 처리한다. 클라이언트에서 공통적으로 필요한 함수와 클래스 등을 제공한다. 주로 URL 처리와 서버 액세스 관련 API를 제공한다. urllib.parseURL의 분해, 조립, 변경 및 URL 문자 인코딩, 디코딩 등을 처리한다. 예문 1234from urllib.parse import urlparseresult = urlparse("http://www.python.org/guide/python.html;philosophy?overall=3#n10")result 결과 123ParseResult(scheme='http', netloc='www.python.org',path='/guide/python.html', params='philosophy',query='overall=3',fragment='n10') urlsplit(), urljoin(), parse_qs(), quote(), encode() 함수 등이 있다. ParseResult 클래스 속성 scheme : URL에서 사용된 프로토콜 netloc : Network Location, user:password@host:port 형식으로 표현 (HTTP 프로토콜은 host:port 로 표현) path : 파일이나 애플리케이션 경로 params: 애플리케이션에 전달될 매개변수 (현재는 사용되지 않음) query : 질의 문자열 또는 매개변수, &amp; 로 구분된 이름=값 의 쌍 형식으로 표현 fragment : 문서 내의 앵커 등 조각을 지정 urllib.request주어진 URL에서 데이터를 가져오는 기본 기능 제공함. urlopen 함수 형식 urlopen(url, data=None, [timeout]) url : 문자열로 직접 지정하거나, Request 클래스의 인스턴스로 지정 가능. 또는 file 스키마를 지정하여 로컬 파일을 열 수 있음. PUT, HEAD 메소드 등, 헤더 조작이 필요할 때는 Request 클래스를 같이 사용한다. GET 방식이 기본값 data : 질의 문자열을 지정하여 POST로 보냄. bytes 타입이어야한다. timeout : 타임아웃 시간 (단위는 seconds) 인증/쿠키/프록시 등의 복잡한 요청 처리는 해당 핸들러 클래스를 같이 사용해야한다. urlopen 사용 예시 123from urllib.request import urlopenf = urlopen("https://www.examples.com")print(f.read(500).decode('utf-8') urlopen POST 요청 1234from urllib.request import urlopendata = "language=python&amp;framework=django"f = urlopen("http://127.0.0.1:8000", bytes(data, encoding='utf-8'))print(f.read(500).decode('utf-8')) Request 클래스로 요청 헤더 지정 123456789101112from urllib.request import urlopen, Requestfrom urllib.parse import urlencodeurl = 'http://127.0.0.1:8000'data = &#123; 'name':'wgl', 'url':'https://wgtech.dev'&#125;encData = urlencode(data)postData = bytes(encData, encoding='utf-8')req = Request(url, data=postData) 참고) 파이썬 웹 프로그래밍(한빛미디어)]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Django 3</tag>
        <tag>Library</tag>
        <tag>Refer to the book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[The Best Way of Django Settings]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FThe-Best-Way-of-Django-Settings%2F</url>
    <content type="text"><![CDATA[The Best Way of Django Settings버전 컨트롤 시스템으로 모든 설정 파일을 관리해야한다.반복되는 설정들을 없애야한다.암호나 비밀 키 등은 안전하게 보관해야한다.버전 관리되지 않는 로컬 세팅은 피하자.Public / Private 저장소에서 제외해야 할 설정 파일 SECRET_KEY (https://docs.djangoproject.com/en/1.8/topics/signing) Development, Release 용도의 환경을 파편화하여 설정하자 pip, conda, virtualenv 등… 활용 참고) The Scoops of Django(프로그래밍인사이트)]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Refer to the book</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python PEP-8 Protocol]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FPEP-8-Protocol%2F</url>
    <content type="text"><![CDATA[현재 작성중인 글입니다. import 될 수 있는 이름(Example : wgtech_python) 소문자 숫자, 대시(-), 마침표(.), 스페이스 그리고 특수문자 미포함 가독성을 높이기 위해, 밑줄을 이용한다.]]></content>
      <categories>
        <category>Programming</category>
        <category>Language</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Language</tag>
        <tag>Python</tag>
        <tag>Python 3</tag>
        <tag>Python 2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django Template 에서 Split 기능 사용하는 방법]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FHow-To-Use-Split-Function-In-Django-Template%2F</url>
    <content type="text"><![CDATA[참고 : https://docs.djangoproject.com/en/2.2/howto/custom-template-tags/ Django 2.2 기준 본 앱 (manage.py가 있는 디렉토리)이 아닌, 추가 앱을 작성해야합니다 추가로 작성된 앱에서 templatetags 패키지를 생성합니다.(이 때, templatetags 패키지는 반드시, views.py, models.py 와 같은 레벨이 되어야합니다.) 파일명은 자유롭게 작성해야하지만, 반드시 templatetags 패키지 안에 생성되어야합니다.(이 경우에는, split.py 라는 파일을 생성하여 커스텀 Split 모듈을 생성합니다) 본 앱의 settings.py 의 INSTALLED_APPS 부분에 반드시 추가로 생성한 앱을 추가합니다. 아래와 같이 태그를 사용하여, 커스텀 Split 기능을 원하는 필요한 영역에서 사용하면 됩니다.https://stackoverflow.com/questions/41932634/how-to-split-the-string-in-django-template?answertab123456&#123;% load split %&#125;&#123;% with form.instance.skills|split:"," as skills %&#125; &#123;% for skill in skills %&#125; &#123;&#123; skill &#125;&#125; &#123;% endfor %&#125;&#123;% endwith %&#125;]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Django 2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[The Basic of Django App Design (장고 앱 디자인의 기본)]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FThe-Basic-of-Django-App-Design%2F</url>
    <content type="text"><![CDATA[필요 용어 장고 프로젝트 : 장고 웹 프레임워크를 기반으로 한 웹 애플리케이션을 지칭합니다. 장고 앱 : 프로젝트의 한 기능을 표현하기 위해 디자인된 작은 라이브러리를 지칭합니다. ##One Django Project has many Apps! #앱 중 일부는 프로젝트 내부적으로 한번만 이용되고 재사용되지 않기도 합니다.또는 때때로 외부 장고 패키지를 지칭하기도 합니다. INSTALLED_APPS : 프로젝트에서 이용하려고 settings.py 에 설정한 장고 앱들을 지칭합니다. Third Party Django Packages : 재사용이 가능한 플러그인 형태로 이용 가능한 Django 앱을 지칭합니다. 앱 이름 설정시 권장사항 PEP-8 규약에 준수해야합니다. 단수형 명사를 사용합니다. (복수형 명사를 사용한 경우, 의미상 혼란을 야기할 수 있습니다.) 확신 없이는 앱을 확장하지 않도록 합니다 앱들은 될 수 있으면 작게 유지하도록 합니다. 작은 앱 여러 개 구성하는 것이 훨씬 나은 구성입니다. Django Project Directory levels (Django 구성 레벨)startproject : 삼단 방식(three-tiered) 기반 구조가 생성 최상위 레벨 : 저장소 루트 &lt;repository-root&gt; 배포에 필요한 다른 파일 등 중요한 내용이 위치합니다. 구성요소 config : 프로젝트 전반에 걸친 settings 파일 manage.py media : 개발 용도로 이용되는 디렉터리이며, 사용자가 업로드한 미디어 파일이 저장된다. 배포시에는 동작되지 않습니다. static : CSS, JS, 필요 Image 등 사용자가 아닌, App 자체에서 필요한 정적 파일들이 존재합니다. templates : 시스템 통합 템플릿 파일(html 파일 등)을 저장합니다 두 번째 레벨 : 프로젝트 루트 &lt;django_project_root&gt; 저장소 루트 디렉터리 안에서 실행하면 생성된 Django 프로젝트가 프로젝트 루트가 됩니다. 세 번째 레벨 : 설정 루트 &lt;configuration_root&gt; settings 모듈과 기본 URLConf (urls.py) 가 저장되는 장소입니다.이는 __init__.py 모듈이 존재하는 파이썬 패키지 형태와 유사합니다. django-admin.py start-project 명령으로 생성된 파일의 일부입니다. Modules in an App (앱 모듈)전역 환경이 아닌, 앱 레벨에서 적용되는 모듈들공통 앱 모듈__init__.pyadmin.pyforms.pymanagement/migrations/models.pytemplatetags/tests/urls.pyviews.py 비공통 앱 모듈behaviors.py : 모델 믹스인 위치에 대한 옵션constants.py : 앱 레벨에서 이용되는 세팅을 저장하는 장소의 이름context_processors.pydecorators.py : 데코레이터가 존재하는 곳db/ : 여러 프로젝트에서 이용되는 커스텀 모델이나 컴포넌트exceptionsfields.py : 폼 필드 이용에 쓰인다. db/ 패키지 생성으로도 충분하지 못한 필드가 존재할 때 모델 필드에 이용됩니다.factories.py : 테스트 데이터 팩터리 파일helpers.py : 헬퍼 함수. 뷰와 모델을 가볍게 하기 위해 뷰와 모델에서 추출한 코드를 저장하는 장소입니다. (utils.py와 기능적으로 유사합니다.)managers.py : models.py 가 너무 커질 경우, 일반적인 해결책으로 커스텀 모델 매니저가 여기에 이동됩니다.middleware.pysignals.py : 커스텀 시그널을 제공하는 것에 대한 대안으로, 커스텀 시그널을 넣기 유용한 공간입니다.utils.py : 뷰와 모델을 가볍게 하기 위해 뷰와 모델에서 추출한 코드를 저장하는 장소입니다.viewmixins.py : 뷰 믹스인을 이 모듈로 이전함으로써, 뷰 모듈과 패키지를 더 가볍게 할 수 있습니다. - 도서참고 : The Scoops of Django(프로그래밍인사이트)]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Django 2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Anaconda로 Python 3.x 가상 환경 만들기]]></title>
    <url>%2Fposts%2F2019%2F05%2F22%2FMake-Python-3-Virtualenv-Anaconda%2F</url>
    <content type="text"><![CDATA[Anaconda 버전 확인 1conda --version 가상 환경 추가 12conda create --name '이름' python='버전'# ex) conda create --name wgpydev python=3.7 추가된 가상 환경 확인 1conda info --envs 가상 환경 활성화 / 비활성화 가상 환경 활성화12conda activate '가상 환경 이름'# ex) conda activate wgpydev 가상 환경 비활성화12conda deactivate '가상 환경 이름'# ex) conda deactivate wgpydev Anaconda Prompt 빠른 진입 Mac 경우12/Users/'계정명'/.anaconda/navigator/a.tool; exit;# ex) ~/.anaconda/navigator/a.tool; exit; ipykernel 설치 1pip install ipykernel Jupyter notebook 가상환경 생성을 위한 Kernel 추가 12python -m ipykernel install --user --name '가상 환경 이름' --display-name "kernel 이름"# ex) python -m ipykernel install --user --name wgpydev --display-name "wgpykernel"]]></content>
      <categories>
        <category>Programming</category>
        <category>Language</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Language</tag>
        <tag>Python</tag>
        <tag>Python 3</tag>
        <tag>Virtualenv</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Data Binding 작업 후, 'data binding error: cannot find symbol class ... Impl' 에러 발생시]]></title>
    <url>%2Fposts%2F2019%2F04%2F26%2FAndroid-Data-Binding-Error-symbol-class-Impl%2F</url>
    <content type="text"><![CDATA[데이터 바인딩(Data Binding) 에러날 경우(data binding error : cannot find symbol class .. Impl’)왜 발생할까요? 개발 중, 불필요한 캐싱 파일이나 기존에 작업하신 부분에 대한 오류 파일 등이 생길 수 있습니다. 따라서 이를 제거하고 다시 빌드를 거쳐야합니다. 해결 방법 본 해결방법은 Android Studio 프로그램을 기준으로 설명합니다. 아래와 같은 방법들 중 한 가지를 택해서 해결하시면 됩니다. 방법 1. Debug 또는 Release 되어 있는 폴더를 Clean 합니다. Build &gt; Clean Project 방법 2. 해당 Project를 Rebuild 합니다. Build &gt; Rebuild Project 방법 3. Android Studio를 통해 축적된 Cache를 제거하고 재시작합니다. File &gt; Invalidate Caches/Restart…에서 Invalidate Caches and Restart 선택]]></content>
      <categories>
        <category>Programming</category>
        <category>Framework</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Programming</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Data Binding</tag>
        <tag>Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Write the docs 2019 서울 : '블로깅과 테크니컬 라이팅]]></title>
    <url>%2Fposts%2F2019%2F03%2F23%2FWrite-the-docs-2019-Seoul%2F</url>
    <content type="text"><![CDATA[노트 필기식으로 작성한 내용이기에, 존댓말을 사용하지 않은 점 참고하시기 바랍니다.또한, 다소 정리되지 않는 부분이 많은 점도 참고하시기 바랍니다. Write the docs 2019 서울 : 블로깅과 테크니컬 라이팅2019년 3월 23일 토요일 오후2시마루 180 이벤트홀 소개Read the Docs : 문서 호스팅 서비스Write the Docs (Portland, Oregon)https://slack.writethedocs.org김대권님 (서울)‘#wtdseoul’ 글 쓰는 개발자 모임 - 글또 (변성윤 님 - 쏘카) (14시 30분 시작)글을 꾸준히 작성하기 위해 만든 모임 이야기https://zzsza.github.io 쏘카 데이터 그룹 머신러닝 엔지니어2017년 12월 (까먹는게 싫어서) 개발블로그 시작글또 : 글쓰는 또라이가 세상을 바꾼다 (평균 연차 1~3년차 / 주니어 개발자)(*강제로 글을 쓰게 만드는 환경을 제공, 글을 쓰면 환급받는 방식으로 습관을 들임)=&gt; 글 쓰는 습관 형성을 목표로글 공유 플랫폼 -&gt; 페이스북 그룹으로 공유. 좋은 테마 찾고 Fork 하고 Repo 이름 바꾸고 git clone 해서 로컬 받고 _posts 에 글 작성 시리즈 글, 번역, 해결 방안, 참여후기, 정보 전달글, 프로젝트 글, 회고/일지 글, 책리뷰, … 에러가 왜 발생했는지, 원인부터 파악하여 해결방안까지 작성. 필히 점검하는 것오타 없는가?글 전개 방식이 자연스러운가?처음 보는 사람도 이해가능한가?블로그 가독성은 어떤가? (심지어 블로그 디자인도 점검.)이미지 품질은 어떤가? 틀린내용도 쓸 수 있다 (책을 쓰지 않는 이상은, 블로그는 나만 보는 전용으로 만드는 것이기때문에 그냥 고치면 되지~로 접근하면 된다) 페이스북 그룹에서 슬랙으로 변환 후 더욱 더 적극적이고 다양한 커뮤니티가 형성되어 고민도 나누고 해결책도 강구하는 계기가 되었음. 25명 글을 2주마다 피드백하심. 결과구성원들의 글쓰기 역량 상승, 높은 충성도, 이직할 때 도움, 양질의 글로 개발 생태계에 기여, 사람을 만날 수 있는 연결 고리가 되었음. 자동화에 대한 내용 : 운영 자동화 -&gt; 운영하는 사람의 리소스 효율적으로 사용(Google Calendar + Slack 연동은 테스트, 추후 봇을 만들어서 오타 및 띄어쓰기 점검하겠다고 하심) ==&gt; 어찌됐든 여전히 글 쓰는 것은 어렵다….. 예치금이 존재하는 강제 글쓰기 모임 (1기수 : 6개월)상호피드백꾸준한 동기같은 분야의 사람들끼리 좋은 시너지형태는 없고 린하게 방식을 바꾸기 zzsza@naver.com (메일, 페이스북) data.scientist(인스타그램) 기술 블로그 생존 전략: 구글 시대의 글쓰기 (김대권 님- 당근마켓)당근마켓 소프트웨어 엔지니어 (인프라/클라우드)44bits.io 팀블로그 운영중이심.=&gt; 따라서 ‘44bits.io 생존전략’ 이야기 왜 글을 쓰고 ‘공개’ 할까요?사람들은 블로그의 글을 어떤 경로로 읽게 될까요? 소셜미디어(Twitter 나 Facebook)를 통한 유입 즉각적인 반응 : 기분이 좋아요. (심지어 잘 공유되면 수백, 수천명이 유입됨) 짧은 생명력 : 짧으면 3일, 길어도 1주일. (이 것은 Tweet 의 특징과 유사함.) 팔로워가 없으면, 효과도 없다.Oraganic Search ( = 구글 검색) 2014년 1월에 작성한, 도커(Docker) 튜토리얼 글 작성시, 당시 아무도 사용하지 않았던 기술이었기에 그 때부터 지금까지 꾸준히 읽혀지고 있음. 지속적인 유입 : 즉, 검색엔진에 노출이 되면 짧으면 몇 주, 길면 몇개월 느린 반응 : 예측이 어렵다. 즉각적인 반응이 없음. (구글은 방문 신뢰성을 기반으로 톱에 산정) .. 그러나 점차 쌓이면 지속적으로 유입이 될 수 있다.즉, 컨텐츠가 더 잘 발견 되기 위해선, 소셜 공유로 단기적으로 방문자 만들고, 검색 유입을 통해 장기적인 관점을 갖춰져야한다. 본론! 어떻게 하면 글이 검색될까?(구글은 왜 내 글을 검색 결과에 보여줄까? = 다른 사람들의 문서는 어떻게 선택될까?)검색엔진은 거대한 추천 시스템이다.즉, 구글은 수집한 문서들 가운데 ‘검색 키워드’에 대해 가장 ‘추천할만한 글’을 정렬해서 보여준다. 공신력이 높다고해서 꼭 보여주는 것이 아니다 (*구글 ‘Search Quality Rating General Guidelines’ 참고.. 예제도 파악해보자) 좋은 기술 블로그를 만들어 나가기 위한 8가지 제언 (nacyot 작성, 44bits 기술 블로그에서 공개) 문서 관점 : 하나의 웹 문서는 그 자체로 완결되어있다. 구글은 사이트가 아니라 웹문서를 찾아준다.웹문서 하나하나 질을 높이는 것이 가장 중요하다.메타데이터(문서에 숨겨진 데이터, 기계만이 알아보는 데이터), 제목, 본문 구조(*김대권님은 메타데이터가 중요하지 않는다고 생각하신다)1) 좋은 제목은 본문의 핵심 키워드가 포함되어야한다. (물론, 키워드만 넣어서 억지로 끌어올리는 방법은 먹히지 않는다)2) 좋은 제목은 본문을 잘 드러내야한다.3) 좋은 본문이 없다면 좋은 제목도 가치가 없다. 구글은 질 좋은 컨텐츠를 알아볼 수 있다. 글을 잘 완성시켜야한다. (사이트 자체에 신뢰성을 떨어뜨리는 일인다.) 단순히 대충 정리하던 내용을 작성하면 안된다. 지양해야하는 글 = 추천할 가치가 없는 글들 (책도 마찬가지) 완성되지 않는 문장들로 작성된 글 개인 노트를 그대로 공개한 글 직접 작성한 내용이 없는 글 설명보다 코드가 긴 글 링크만 모아놓은 글 적절한 분량의 글을 작성하자. 7분안에 읽히는 글을 작성하자 (1페이지 1분, 1페이지 800자 계산시, 약 5600자 정도) 짧은 뉴스는 2천-3천자 내외 긴 튜토리얼은 2만 - 3만자 내외 이 것보다 짧은 글은 지양하자. 이 것보다 긴 글은 나눠서 쓰는 걸 고려해보자. 글의 형식을 정하자. What nobody tells you about documentation 참고. (* Read the docs는 확실히 차별화가 있음) Tutorials, how to guides, references 위주 블로그에는 ‘튜토리얼’, ‘하우투’, ‘해설’, ‘뉴스기사’, ‘에세이(…는 좀 애매하다)’ 위주로 작성하는 것이 좋다. … 사실은 좋은 미디어들은 이미 지키고 있는 기본 중의 기본! 그리고 좋은 글을 작성한다. 사이트 관점 : 웹문서와 달리, 개별적으로 평가 받는 것은 아니다.PageRank 가 중요한 이유. (특히, Wikipedia는 1위. 따라서 wikipedia 에서 referred 된 링크는 순위가 높다) 컨텐츠 관리가 가능한 도구를 사용하자. Static Site Generator를 주로 사용하는다. 그러나 Headless CMS사용하는 것을 추천한다.보존 그리고 보존 10년 이상 유지되는 기술 블로그를 떠올려보자. 많은 사이트들이 자연도태되어 5년 이내로 사라진다. 즉, 장기적으로 키울 생각을 가지고 운영해보자. 실전편 (처음 블로그를 시작하는 분들을 위하여)관심사 -&gt; 키워드 -&gt; 글쓰기 -&gt; 공유 먼저 자신이 자신있는 관심사들을 정리해보세요. 글을 쓰고 싶은 키워드를 정하고 구글에서 검색해보세요. 아직 좋은 글이 별로 없는(!), 적당한 범위의 키워드를 정합니다.(ex : 파이썬 &gt; (적합 키워드) &gt; 파이썬 array 타입의 reverse 함수 사용법) 5천자 이상의 글을 작성. 제목에는 반드시 키워드를 포함. 구조화된 글을 가지고 작성하자. 게시하고 공유하자. 기다리자 (**존버) = 티끌모아 태산 To. 지식 공유를 시작하려는 개발자 From. 당신의 든든한 서포터 Developer Relations 팀 (홍연의 님 LINE+) 이메일 : yeoneui.hong@linecorp.comLINE+ DevRel 팀에 입사하신지 4개월차. Developer Relations (DevRel) 팀이란??국내에 많이 존재하는 것이 아니다.(회사마다 좀 다를 수 있고, 같은 팀안에서도 다른 일을 하는 분들이 많다.)기술 블로그 운영 (engineering.linecorp.com), 페이스북 운영 (fb.com/line.developers), 트위터 운영(@line_developers)개발 컨퍼런스 / 세미나 / 커뮤니티 후원 (메일로 문의)LINK DEV, LINE Developers Meetup (19년 4월 예정)즉, 브랜딩 작업, 지식공유 팀 Developer Relations 팀엔 어떻게 오게 되었나???첫 직장은 IT 도서 기획…분야는 IT, 주변엔 개발자, 잘(?) 할 수 있는건 콘텐츠 기획, 재밌는 건 마케팅, 보람을 느낀 건 내가 한 일이 누군가에게 도움이 된다는 것. Public Relations (PR) 팀 vs. Developer Relations (DR)팀 …으로! 보면 된다. To. 지식 공유를 시작하려는 개발자에게블로그, 책, 영상, 강의, 발표 … 는 힘들다…지식공유 = 내 인생의 또 다른 기회를 가져올 수 있다! Technical Writing 팀이 운영중이고, 담당하시는 개발 인력들이 직접 작성함.작성에 도움이 될 수 있도록 피드백을 제공. 다른 나라쪽 DR팀에서 직접 번역도 검수. 사용자를 외면하지 않는 릴리스 노트 (조은별 님 - 시큐아이) 이메일 : jogamza@gmail.com기술 문서를 작성하는 일을 하심.어떤 고민을 하면서 주로 어떤 식으로 작성하시는지 경험을 공유하심.IT 출판사 편집자 -&gt; 보안회사 테크니컬 라이터 개발팀 -&gt; 기술 + 글쓰기 테크니컬 라이터의 일 사용자 매뉴얼, 릴리스노트, API 문서 화이트페이퍼, UI 용어/메시지, 개발 계획서, 테스트 계획서 기술블로그 (온라인 콘텐츠), IT 도서 … 주로, 사용자 매뉴얼, 릴리스노트, API 문서, 화이트페이퍼, UI 용어/메시지 까지하심. 릴리스 노트의 정의 문제를 정의하고 해결점을 기술한 문서 신규 기능 개선된 기능 오류 수정 개발자 코멘트 연관 없는 항목이 나열된 목록 간결하고 요약된 문장 구성 포맷 날짜, What’s New, Bug fixes 등으로 구성대상이 누구인지에 따라 릴리스노트를 작성하는 방식이 좀 다르다. App Store에 올라온 릴리스 노트들 (대강 사용된 노트와 자세히 써 있는 노트) Blizzard 게임 Overwatch 게이머들을 위한 릴리스노트 Github Desktop 개발자를 위한 릴리스 노트 시큐아이 릴리스노트 (문서에 대한 구조/카테고리를 일관성있게 작성하는 것을 초점으로 한 릴리스노트) 릴리스 노트의 포맷 예제[신규 기능] XX 메뉴에 고급 검색 기능을 추가했습니다. OO 메뉴에 검색을 저장하고 나중에 다시 실행할 수 있는 기능을 추가했습니다.[개선된 기능] 보기(Show) 메뉴에서 ‘다음 일주일간의 약속’과 ‘활성상태의 약속’에 접근하는 속도를 개선했습니다. 릴리스 노트 사전 준비 : 문제, 원인, 해결 식으로 진행 더블플레이 슬라이딩 규칙이 신설되었다. 문제 : 더블플레이 상황에서 연계 플레이 하는 유격수나 2루수 부상 위험이 크다. 원인 : 베이스에 닿을 수 있다 판단되면 수비 방해를 선고하고 … 해결 : 네이버후드 플레이는 인정되지 않으며, 수비수는 반드시 베이스를 정확히 밟아야하고 주자도 베이스만을 향해서만 슬라이딩을 해야한다. 야구 팬을 위한 릴리스 노트 작성 : 코멘트 등을 추가하여 더 쉽게 접근이 가능하도록 한다.[더블 플레이시 슬라이딩 규정 신설]주자가 더블 플레이를 막는 목적으로 고의적으로 접촉하거나 시도할 경우, 주자와 타자를 모두 아웃 될 수 있습니다.네이버후드 플레이가 인정되지 않으므로, 수비수는 반드시 베이스를 밟고 있어야합니다. 네이버후드 플레이 : 2루 베이스를 밟지 않아도 아웃으로 선언해주는 암묵적인 행위 야구 전문가를 위한 릴리스 노트 : 다소 간결하게 작성이 가능하다.[더블 플레이 시도시 슬라이딩 규정 신설]주자는 올바르게 베이스를 위해 슬라이딩해야합니다.수비측 내야수는 반드시 베이스를 밟고 있어야합니다.네이버 후드 플레이가 인정되지 않습니다. 릴리스 노트 작성시 고려할 것제품/사용자 특성 :누가 읽는 것인가? 일관된 문서 포맷 : 어떻게 읽는 것인가?세 줄, 다섯줄 요약 : 무엇을 읽는 것인가?릴리스 노트 포맷에 대한 룰을 정확히 정하자. 개발자는 왜 블로그를 해야하나요? (이동욱 님 - 우아한 형제들)왜 블로그를 해야하는지, 블로그를 왜 운영을 잘해야하는지에 포커스 우아한 형제들 백엔드 개발, 한국 JetBrains 사용자 모임 운영진, jojoldu.tistory.com 운영트래픽과 데이터가 많기에 성장할 여지가 있는 회사로 PM 블로그 주말 방문은…..ㅋㅋㅋㅋㅋ 티스토리 스킨으로 아이덴티티 보여줌.티스토리 댓글 대신 Github 댓글로 교체.티스토리는 마크다운 파일을 지원안하기 때문에 markdown-tistory 라이브러리 만듦.=&gt; 블로그 좋아하고 개선하고 혜택을 받은 사람이라고 말함. 블로그를 하면 좋은 이유 광고비 : Google AdSense 에서 매일 $1 ~ $5 (PV 1만에 $5 - 10 정도) 기고 &amp; 집필 요청 : 출판제의, 신간 도서 추천평, 신간 도서 칼럼, 잡지 기고 등등 세미나 초대권 : 이동욱 님은 OKKY 세미나 연사로 초대되기도 하심. 인지도 : 타회사 Wiki에 내 블로그가 링크, referred 됨. 인터뷰와 식사 제공(?) : 마이크로소프트웨어 인터뷰, 인프런 인터뷰 이직 : 멀리서 세미나 발표로, 책으로 보기만 했던 개발자분의 채용 추천, 이력서 코칭도 직접 받음. 추후에 이동욱님 블로그에 기재하심. 사내 기술 블로그 : 작성 요청에 부담이 올 수 있음. (지원자들이 사내기술 블로그 작성할 수 있다?? 이걸로 과연.. 지원할까?) 블로그를 하면 좋은 이유(2) : 왜 블로그를 해야하나요?연봉 / 회사 / 직위 / 재산을 빼고 ‘나 자신’을 어떻게 표현할 수 있을까…?나는 무슨 개발자일까? -&gt; 블로그가 그걸 가능케한다! 개발자들에게 블로그는 나 자신을 나타내는 아이덴티티! 결말젠킨스 마스터 책 “아무리 흐린 잉크라도 좋은 기억력보다 낫다.” 개발 관련 기술 블로그 운영하기 (변정훈 님 - BlockchainOS)(outsider) 님2007년 5월 15일 12시 25분 첫 글 집필전체 연도별 글 (총 1,413개) 글 작성 목표3일에 글 1개글 1개에 짧게는 2-4시간글 1개에 길게는 2-3일퇴고는 잘 하지 않는다.문장을 다듬는 거에 너무 시간을 허비지 않는다. 글 주제개발하면서 적을 수 있는건 전부새로운 도구, 환경 설치/설정새로 알게된 라이브러리/도구의 사용법최근에 겪고 해결한 장애(트러블슈팅)와 처리방법개발관련 공유할 만한 내용글을 쓸 주제는 항상 생각하고 있다 나보다 모르는 사람 —— 나(outsider 님) —— 나 보다 잘 하는 사람 Day One 노트앱 사용 왜 개발 블로그를 운영하는가?공부할 게 많으니까 개발 블로그를 운영한다. = 글쓰는 것이 곧 공부이다. 처음에 글 쓴 이유배운걸 자꾸 잊어서전에 설정해 본 적 있는데 기억이 안나서겪어본 장애였는데 어떻게 해결했더라… 어디에 적을까?개인 노트TIL (Today I Learned)공개 블로그 (outsider 님 선택) 블로그를 작성하는 것이 지식을 습득하는 과정,단순히 겪어보거나 읽어보는 지식 이상으로 습득하는 과정이 필요하다. 블로그는 회고와 비슷하다 글을 공개로 쓸 때 장점누구나(1년 또는 10년 뒤의 나) 이해할 수 있어야한다글로 정리하려면 잘 알고 있어야한다글로 정리하면서 다시 고민해 볼 수 있다reputation이 1 올랐습니다 글의 흐름하고자 했던 일 (Context)경험한 문제 상황 정리 (격리된 상황)시도해 본 방법(내가 아는 지식)왜 동작이 안되는가? 왜 동작하는가?(가설)문제 상황 재현예제 코드관련 링크개념 설명 Stack Overflow 에서 말하는 MCVE (최소한의, 완성된, 입증가능한 예제)Minimal : 문제를 재현할 수 있는 가장 적은 코드를 사용하라Complete : 문제를 재현하는데 필요한 모든 부분을 제공해라Verifiable : 실제로 해당 문제를 재현하는지 코드를 테스트해라and Verifiable Example : 이를 위해 입증가능한 예제 알고 있는 내용이더라도 글로 적으려면 공부가 많이 필요하다공유 문화를 좋아하신다공유를 통해 남의 경험에서 배우고 시간을 줄인다일하면서도 글을 많이 작성한다 Slack Issue Tracker Wiki 글을 지속적으로 쓰려면 어떻게 해야하나요?저도 잘… (습관이 된 것 같아요) 사람들이 많이 보는 글JavaScript에서 String을 Number 타입으로 바꾸기 (2009/08/19 01:09)Ubuntu 의 apt-get 명령어 정리 (2009/06/23 02:52)GET과 POST의 차이 (2009/03/31 22:53)알고 있어야할 8가지 정규식 표현 from nettuts+제발 a href=“#” 좀 쓰지 말자 (2008/10/22 22:41) 통계Oragnic Search 위주 기술블로그는 Facebook 을 신경 안 쓸 수 없다이 분 블로그도 주말에는…..ㅋㅋㅋㅋㅋ 참고사항강규형 님 (Google Analytics 를 이용한 블로그 콘텐츠 인게이지먼트(Engagement) 추적) 돈이 되나요? 안됩니다!]]></content>
      <categories>
        <category>Seminar</category>
        <category>Blogging</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Notes</tag>
        <tag>Blogging</tag>
        <tag>Seoul</tag>
        <tag>마루180</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google I/O Extended '18 Incheon : What's new in Tensorflow]]></title>
    <url>%2Fposts%2F2018%2F07%2F07%2FGoogle-IO-Extended-Incheon-2018-Whats-New-In-Tensorflow%2F</url>
    <content type="text"><![CDATA[이건희(Invest Crypto, GDG 판교 운영자) 개요 Google DevFest 에서 이미 발표된 것이고, Google I/O를 통해 새로 발표함. High-Level APIs TF Extension, TF Hub and TF Serving Opportunities, challenges, and strategies to develop AI for everyone Codelab 적용 가능 본 세션1. Tensorflow.js 기존은 Python 기반이었음. 그러나 이번에는 JavaScript 로도 돌릴 수 있음. 브라우저에서 작동하는 Tensorflow 설치가 필요 없고, 상호작용이 가능하며, 머신러닝에 필요한 센서들을 작동 또는 입력에 따른 출력값을 취득할 수 있음. Layers API (Keras Model) - Core API (Tensorflow SavedModel) Deeplearn.js Low-Level 선형대수 연산을 Core API 로 작동하여 연산함. Keras Model 과 SavedModel 구동 코드와 방식이 다르기 때문에 잘 생각하여 코딩해야한다. CDN으로 불러올 수 있기 때문에, 환경 설치에 대한 어려움이 덜 한다. 그러나 네트워크의 영향이 매우 크다. Core API가 기초적인 사칙연산을 수행한다. Demo : EMOJI SCAVENGER HUNT 실시간으로 카메라로 받아오는 코드 JavaScript123const pixels = tfc.fromPixels(camera.videoElement);// 서버단에서 받아와 추론하면 cost 가 다량 발생할 수 있기 때문에, 클라이언트가 처리한다.// 클라이언트가 곧바로 추론하는 방식. Node.js 에서도 GPU 연산이 가능하다. (Eco System + V8 speed) express 백엔드와 Tensorflow 를 하나로 묶을 수 있다. JavaScript 프로그래밍에 익숙해져있는 사람들은 굳이 Python 언어를 추가적으로 배울 필요가 없다.(성능상에 차이가 정말 미묘한 근소차이기 때문이다.) chromeOS 에 Linux Apps 실행이 가능하도록 개발되었다. 이런 점을 고려하자면 Tensorflow.js 도 충분히 만들 이유가 있겠다고 유추한다. 모바일앱과 IoT는 Tensorflow LITE, 모바일/데스크탑 브라우저는 Tensorflow.js Tensorflow LITE 클라이언트와 서버의 영상데이터를 추론하는 동안 막대한 네트워크 비용이 발생된다. 큰 모델의 크기를 감당할 만한 클라이언트가 아직 존재하지 않거나 그 기술이 미미하기 때문에 많이 보완해야한다. 공식홈페이지에서 데모를 제공하고 있기 때문에 확인해보자. Tensorflow HUB 모델을 로컬에 저장하고 로드하는 것이 아닌, HUB로부터 링크를 이용하여 로드하는(서비스를 제공하는) 방식. 미리 학습된 가중치와 그래프를 포함하는 모듈들, 재사용 및 재학습 가능. 사용법 : hub.Module(“링크…//&lt;Module 이름&gt;/“[,trainable=True]) trainable : 내가 가지고 있는 모듈을 재학습해주는 파라미터 기능 Google 이 제공하는 Modules Image - Inception, Mobilenet, NASNet, PNASNet, ResNet Text : NNLM (한국어 지원) Etc : Progan, Delf, I3D 기존 모델 재사용 용이, 중복 배포 방지, 진입장벽 낮춤 Tensorflow Model Analysis Tensorflow 평가 라이브러리, 많은 양 데이터 분산 평가, Jupyter 통한 시각화 처리 Tensorflow Model Analysis → Eval Graph → Tensorflow Serving 순으로 진행 Tensorflow Serving Service → (데이터 전달) → 서버 → 학습 → 모델 → Service 의 문제 해결점을 Tensorflow Serving 이 그 사이에서 Serving 하여, 다중 모델, Thread Isolation, 높은 처리량, 적용을 한다. Service → (데이터 전달) → 서버 → 학습 → 모델 → (gRPC 이용) → Serving → Service RESTful API 적용 가능. (2018. 7. 7 기준 아직 미공개) 요약- Tensorflow 는 백엔드 뿐만 아니라 클라이언트 확장도 이뤄지고있다.- 점점 다양한 개발자를 수용하기 위해 개발 편의성을 늘리고 있다.- 다양한 플랫폼으로 Tensorflow 가 진출하고 있다.- Tensorflow 를 배우자]]></content>
      <categories>
        <category>Seminar</category>
        <category>Google</category>
        <category>Google I/O</category>
        <category>Tensorflow</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Google</tag>
        <tag>Google I/O</tag>
        <tag>Machine Learning</tag>
        <tag>Artifical Intelligence</tag>
        <tag>Tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google I/O Extended '18 Incheon : Modern Android Development]]></title>
    <url>%2Fposts%2F2018%2F07%2F07%2FGoogle-IO-Extended-Incheon-2018-Modern-Android-Development%2F</url>
    <content type="text"><![CDATA[김태호님, Google Korea (Mobile Apps Technical Specialist) 서론 Android Jetpack &amp; Android Studio Android 10주년인 2018년. 변화된 부분들특징 (2017년과 2018년 사이에 많은 것들이 생김.) ConstraintLayout, Kotlin Architecture Components, KTX (라이브러리), Studio Profilers, Paging (라이브러리) 안드로이드 개발 과거와 오늘Tools Hierarchy Viewer⇒ Android Studio 의 Layout Inspector Eclipse 에서의 Profiler⇒ Android Studio 에서 모든 메서드 트래킹과 샘플링을 확인할 수 있음. Dalvik Debug Window (Memory Tracking)⇒ Android Studio 에서 자체 제공 (8.0 이상, 그 이하는 Start-Stop 수동으로 지정해야한다.) 코딩 방식의 Layout Design⇒ ConstraintLayout 등장 (아직 코딩이 필요하긴 하지만, 실제로 디자인과 개발의 분담과 충돌이 줄어들고 있는 추세) Runtime &amp; Language Dalvik (과거의 하드웨어 성능이 다소 제약적이어서, 메모리 최적화 중심 런타임이었음.)⇒ ART (특정 디바이스에 제약을 두는 것이 아니고, 앱 자체의 퍼포먼스에 중점임. Heap defragmentation) Java (사용자층이 넓다. 쓸 수 있는 좋은 Tools들이 많다. 그러나, 신버전에 적응이 매우 느린 편, 1.5버전에 최적화)⇒ Kotlin (하위호환성 까지 제공한 Java 1.7/1.8 기반의 공식 지원 언어) Libraries &amp; APIs Layouts (Absolute, Linear, Frame, Grid, Relative)⇒ Layouts (Absolute, Linear, Frame, Grid, Relative) + ConstraintLayout AdapterViews (List, Grid, Gallery, ViewHolder, Animations…)⇒ RecyclerView 사용 + LayoutManager 사용, notifyItem(..)(ed 또는 position) 메서드 사용 Fragments (Complicated, Core Platform Bugs)⇒ Platform API Deprecated 되었으니 Support Library 자체의 Fragments 사용 권장 (New Navigation Component) Activities (기존에는 무조건 액티비티로 처리하려고 함)⇒ Activity 하나로 유지하도록 권장. (One Activity Application) Architecture (Dianne Hackborn 이 알아서 하라고 함. 그러니까 혼란을 가중시킴)⇒ Google 에서 Recommended app architecture 제공함. Android Lifecycle (Activity 꺼 따로 Fragment 꺼 따로 알아야함.) 그리고 Callback 메서드를 일일히 처리해야한다.⇒ Architecture Components : LifeCycle (LifecycleOwner, LifecycleObserver) Activity와 기존 코드들이 분리가 된다. Views and Data (Activity에 View와 데이터, 생명주기들이 모두 포함)⇒ LiveData&lt;type&gt; data 방식의 ViewModel 로 제공됨. 그리고 Activity에는 ViewModel를 참조하는 것으로 바뀜. Data 기존의 처리⇒ Room 이라는 형태로 데이터 처리 (Sqlite 기반, Compile-time 검증, LiveData Integration) Tools Android Jetpack : 좋은 Android 앱을 만들기 위한 좋은 Tools과 라이브러리. (AndroidX, Android KTX, Architecture Components 포함) Architecture : WorkManager, Navigation, Paging UI Behavior Foundation AndroidX AndroidX : 좁은 범위의 binary dependencies 에서는 권장함. Finer-grained artifacts : 직관적으로 Maven 방식의 groupId, artifactId 로 제공함. Refined versioning : 기존 라이브러리 버전인 28.0.0 을 1.0.0 으로 새로 정리 Updated Packaging : android.&lt;feature&gt;.ClassName 또는 Maven 방식 Migrating to AndroidX : Android Studio 3.2 -&gt; Refactor -&gt; Refactor to AndroidX AAR &amp; JAR : Jetifier (Binary Migration tool) 로 해결 Android Studio DX -&gt; D8 : 16% 성능 향상 SQL Code Editing Auto Completion Kotlin Lint Checks C++ Profiler Network Threading Profiler IntelliJ Platform Update : SVC Preference 기능 Emulator Quick Boot]]></content>
      <categories>
        <category>Seminar</category>
        <category>Google</category>
        <category>Google I/O</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Google</tag>
        <tag>Google I/O</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google I/O Extended '18 Incheon : 새로워진 Material Design 소개]]></title>
    <url>%2Fposts%2F2018%2F07%2F07%2FGoogle-IO-Extended-Incheon-2018-Introduce-New-Material-Design%2F</url>
    <content type="text"><![CDATA[임성혁님, Google Korea (Developer Relations) Open Source is a key part of Google Engineering Kubernetes, Android, Chrome, Tensorflow 임베디드 개발자 출신 - 개발자가 디자인 감각을 가지고, 협업을 할 수 있는 디자인이라고 생각한다. What’s Material Design? 2014 출시, 전폭적 지지로 성장됨. 많은 툴들이 공개됨 Print design Methods Motion provides meaning Flexible foundation Cross-platform Material Design System is a set of components… Material Design System is a set of patterns… https://material.io : Guidelines Material Design Example : SHRINE Stickersheet (이런것도 있나? 하는 것들도 다 있음) What’s new in Material Design? 검은색 바탕 흰색 글씨로 변경 https://m2-spec.appspot.com/ Material System Material Foundation Material Guidelines Tools, Editor (Sketch 앱과 사이트를 통해 제공) 를 통하여 실제로 어울리는 색상을 골라주고 플러그인 형태로 Standalone 형태의 개발을 할 수 있다. Gallery 는 한 Products를 개발할 때 각 서버와 플랫폼을 관리할 수 있다. 버전관리가 용이함. How to use Material Design ?Tabs : Gesture에 가장 민감한 사항. 잘 이해하면 전체적으로 구조 파악이 용이하다. 확장이 가능하고, 정보가 있으며, 동등한 단계의 카테고리들로 구성되어야한다. (Scalable, Informative, Peers) 메뉴 하위 구분 필수아이콘 전용메뉴 제공 가능. (그러나 사용자들이 확실하게 분별할 수 있도록 설정해야한다.)잘린 문자, 또는 바로 이해할 수 없게끔 줄인 문자는 사용 불가. Navigation Drawer 조직적이며, 아이템마다 그 특성이 확인이 가능하며, 해당 상황이나 맥락별로 구분이 가능해야한다. (Organized, Identifiable, Contextual) 5개 이상의 메뉴를 사용할 때 권장오른쪽 화면에 나오는 앱에서 사용을 해서는 안된다.Label 내용을 간결하게, 폰트를 작게 하지 말기동일한 다수의 아이콘 사용 불가아이콘 사용유무 일관성 유지 (사용자들이 상하위 메뉴 구분이 힘들어하기 때문이다.)모든 메뉴에 구분자를 사용하지 않도록 한다. (예: ListView 사용시 구분자를 사용하지 않도록) Floating Action Button 기능에 대해 건설적이거나 접근이 용이하며, 상황별로 구분이 가능하며, 다른 레이아웃이나 컴포넌트들에 가리지 않고 사용자들에게 우선적으로 보여져야 한다. (Constructive, Contextual, Primary) 항상 떠있어야 하고 가장 맨 위로 올려있다.FAB는 분산없이 하나로만 사용 권장. 누르지 않더라도 기능이 분별한 아이콘만 사용 권장.Layer Badges 사용 권장하지 않음. 글씨 사용은 미권장. Extended Floating Action Button Extended Floating Action Button 사용원칙은 Floating Action Button 과 동일하다. Text Only Wrapping Text (두 줄 이상) App Bars : Top 지속적이어야하고, 사용자들이 원하는대로 이동할 수 있도록 유도되어야하고, 그 자체로써 위치되어져야 한다. (Persistent, Guiding, Components) Bar에 이미지 넣는 것을 지양.두 줄 이상의 메뉴 이름 사용 불가. (…)문자 사용 불가.작은 문자 크기 사용 불가 App Bars : Bottom 주로 한국인들이 사용하는 디자인. 또는 큰 화면의 휴대폰에서 편리한 메뉴 선택 사용을 도움. 역동적이며, 유연해야하며, 인체공학적이어야한다. (Actionable, Flexible, Ergonomic) 자유로운 Positioning 가능FAB on a Bottom Bar (붕 떠있는 형태로 사용하면 안된다.)Action이 2개 이상으로 사용 필수. Navigation 을 넣는 걸 권장하지 않음. Backdrop(Google I/O 2018 신기능) 필요 레이아웃들이 서로 연관되어져야하며, 즉시 그 이벤트가 보여져야하며, 상황에 맞춰 제공되어야한다. (Relevant, Immediate, Contextual 항상 보이는 것이 아니라, 임시적으로 숨겨져 있는 부분들을 제공함.(Edit 할 수 있는 부분이 아니고, 단순히 Viewable 한 부분으로 제공하여야함)]]></content>
      <categories>
        <category>Seminar</category>
        <category>Google</category>
        <category>Google I/O</category>
        <category>Material Design</category>
      </categories>
      <tags>
        <tag>Seminar</tag>
        <tag>Framework</tag>
        <tag>Android</tag>
        <tag>Google</tag>
        <tag>Google I/O</tag>
        <tag>Design</tag>
        <tag>Material Design</tag>
        <tag>iOS</tag>
        <tag>Web</tag>
        <tag>Dart</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
</search>
